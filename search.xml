<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>机械臂运动学笔记(1)-正向运动学</title>
      <link href="/2025/04/20/manipulator/"/>
      <url>/2025/04/20/manipulator/</url>
      
        <content type="html"><![CDATA[<h2 id="manipulator-kinematics-study">Manipulator kinematics Study</h2><h4 id="前言">前言</h4><p>近来笔者在完成本科毕设，用到一些与机械臂相关的知识，最近整理一下，主要分为正向运动学推力和逆向运动学分配两部分，本文先记录一下正向运动学的学习，记录了DH参数法和旋量法两种方法。本文所用的机械臂结构如下： </p><h4 id="dh参数法">DH参数法</h4><p>D-H参数法按照设定规则为每个连杆固连了一个坐标系，之后就可以方便的描述一个连杆坐标系到相邻的下一个连杆坐标系的转换关系。实质就是把相邻坐标系的转换分解为了若干个步骤，每个步骤均只有一个参量。这几个步骤对应变换的组合就完成了相邻坐标系的变换。  记录本机械臂DH参数表如下: | Joint | d(mm) | θ(°) | a(mm)|α(°)| | :— | :—-: | :—: |:—:|:—:| | 1 | 77 | q1 |0|-90| | 2 | 0 | q2-90|128|0| | 3 | 0 | 90 |24|0| | 4 | 0 | q3 |124|0| | 5 | 0 | q4 |126|90|</p><p>a是两个转轴之间的距离（Z轴），异面直线公垂线的长度，也就是连杆的长度，对于旋转关节是固定值<br>α是两个转轴之间的夹角<br>d是两个公垂线在同一个转轴上的交点之间的距离，实际上两个坐标轴，其中一个X轴转动θ角后与另一个X轴平行，两个X轴之间的距离 θ是两个公垂线之间的夹角（两个坐标系X轴的夹角），也就是转轴（关节）转动的角度。</p><p>步骤1：坐标系初始位于坐标系{A_{i-1}}，绕X_{i-1}​轴旋转α_{i-1}​，使Z轴与Z_{i}​轴平行；<br>步骤2：坐标系沿X_{i-1}​轴平移a_{i-1}，使Z轴与Z_{i}​轴共线；<br>步骤3：坐标系绕Z_{i-1}同时也是Z_{i}旋转θ_{i}​，使X轴与X_{i}​轴平行；<br>步骤4：坐标系沿Z_{i-1}​(同时也是Z_{i}​)平移d_{i}​，此时已变换到 A_{i}。</p><h4 id="旋量法poe">旋量法(POE)</h4><p>与DH参数法不同，旋量法不过分考虑中间关节的变化，而是通过记录初始状态下的末端位置(用G0表示)，以及运动过程中关节角变化产生的旋量来进行正向运动学计算得到当前关节角下的末端位置的。<br>记录本机械臂的旋量参数表如下： | Joint | ωi | τi(mm) | mass(kg)| | :— | :—-: | :—: |:—:| | 1 | [0 0 1] | [0 0 77] |0.210| | 2 | [0 1 0] | [0 0 77]|0.146| | 3 | [0 1 0] | [24 0 205] |0.138| | 4 | [0 1 0] | [148 0 205] |0.236|</p><p>首先在参考坐标系下，按照机械臂的关节运动正方向确定Z轴，之后通过用户方便自定义其余的X轴和Y轴。使用罗德里格斯公式表示绕物体坐标系的旋转轴一定角度后的旋量： <span class="math display">$$T_{i}=Rot(\hat{\omega_{i}},\theta_i)=e^{[{\hat{\omega_{i}}}]\theta_i}=I+sin(\theta_i)[{\hat{\omega_{i}}}]+(1-cos(\theta_i))[{\hat{\omega_{i}}}]\tag{1a}$$</span> 最终的末端变换矩阵为： <span class="math display">$$T=\prod_{i=0}^n{e^{[{\hat{\omega_{i}}}]\theta_i}}G_{0}\tag{1b}$$</span> #### 代码 给出旋量法正向运动学和蒙特卡洛方法的采样可达域量化代码 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">from scipy.linalg import expm</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from scipy.spatial import ConvexHull</span><br><span class="line">from mpl_toolkits.mplot3d.art3d import Poly3DCollection</span><br><span class="line"></span><br><span class="line"># ===== 基础函数 =====</span><br><span class="line">def hat(w):</span><br><span class="line">    return np.array([</span><br><span class="line">        [0, -w[2], w[1]],</span><br><span class="line">        [w[2], 0, -w[0]],</span><br><span class="line">        [-w[1], w[0], 0]</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">def twist_hat(w, v):</span><br><span class="line">    return np.block([</span><br><span class="line">        [hat(w), v.reshape(3, 1)],</span><br><span class="line">        [np.zeros((1, 3)), 0]</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">def adjoint(g):</span><br><span class="line">    R = g[:3, :3]</span><br><span class="line">    p = g[:3, 3]</span><br><span class="line">    p_hat = hat(p)</span><br><span class="line">    return np.block([</span><br><span class="line">        [R, np.zeros((3,3))],</span><br><span class="line">        [p_hat @ R, R]</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line"># ===== 参数设置 =====</span><br><span class="line">G_0 = np.array([[1, 0, 0, 0.28],</span><br><span class="line">                [0, 1, 0, 0],</span><br><span class="line">                [0, 0, 1, 0.203],</span><br><span class="line">                [0, 0, 0, 1]])</span><br><span class="line">G_1 = np.array([[1, 0, 0, 0],</span><br><span class="line">                [0, 1, 0, 0],</span><br><span class="line">                [0, 0, 1, 0],</span><br><span class="line">                [0, 0, 0, 1]])</span><br><span class="line">G_2 = np.array([[1, 0, 0, 0],</span><br><span class="line">                [0, 1, 0, 0],</span><br><span class="line">                [0, 0, 1, 0.077],</span><br><span class="line">                [0, 0, 0, 1]])</span><br><span class="line">G_3 = np.array([[1, 0, 0, 0.024],</span><br><span class="line">                [0, 1, 0, 0],</span><br><span class="line">                [0, 0, 1, 0.205],</span><br><span class="line">                [0, 0, 0, 1]])</span><br><span class="line">G_4 = np.array([[1, 0, 0, 0.128],</span><br><span class="line">                [0, 1, 0, 0],</span><br><span class="line">                [0, 0, 1, 0.205],</span><br><span class="line">                [0, 0, 0, 1]])</span><br><span class="line">T_base_to_body = np.array([</span><br><span class="line">    [1, 0, 0, 0.0055],</span><br><span class="line">    [0, 1, 0, 0],</span><br><span class="line">    [0, 0, 1, 0.064],</span><br><span class="line">    [0, 0, 0, 1]])</span><br><span class="line">R_inertia_to_robot_base=np.array([[1,0,0],</span><br><span class="line">                                 [0,-1,0],</span><br><span class="line">                                 [0,0,-1]])</span><br><span class="line">G_list=[G_1,G_2,G_3,G_4]</span><br><span class="line">w1 = np.array([0, 0, 1])</span><br><span class="line">w234 = np.array([0, 1, 0])</span><br><span class="line">w_list = [w1, w234, w234, w234]</span><br><span class="line"></span><br><span class="line">r1 = np.array([0, 0, 0.077])</span><br><span class="line">r2 = np.array([0, 0, 0.077])</span><br><span class="line">r3 = np.array([0.024, 0, 0.205])</span><br><span class="line">r4 = np.array([0.148, 0, 0.205])</span><br><span class="line">r_list = [r1, r2, r3, r4]</span><br><span class="line"></span><br><span class="line"># 构造螺旋轴 ξ</span><br><span class="line">def exp_rotation(w, n):</span><br><span class="line">    hat_w = hat(w)</span><br><span class="line">    return np.eye(3) + np.sin(n) * hat_w + (1 - np.cos(n)) * np.dot(hat_w, hat_w)</span><br><span class="line"></span><br><span class="line"># 平移部分</span><br><span class="line">def exp_translation(w, r, n):</span><br><span class="line">    hat_w = hat(w)</span><br><span class="line">    term1 = np.dot(np.eye(3) - exp_rotation(w, n), np.cross(w, np.cross(r, w)))</span><br><span class="line">    term2 = n * np.outer(w, w) @ np.cross(r, w)</span><br><span class="line">    return term1 + term2</span><br><span class="line"></span><br><span class="line"># 齐次变换矩阵计算</span><br><span class="line">def forward_kinematics(q, w_list, r_list, G_0):</span><br><span class="line">    # 初始化变换矩阵为单位矩阵</span><br><span class="line">    exp_sigma = [np.eye(4) for _ in range(4)]</span><br><span class="line"></span><br><span class="line">    for i in range(4):</span><br><span class="line">        w = w_list[i]</span><br><span class="line">        r = r_list[i]</span><br><span class="line">        n = q[i]  # 关节角度</span><br><span class="line">        exp_sigma[i][:3, :3] = exp_rotation(w, n)  # 旋转部分</span><br><span class="line">        exp_sigma[i][:3, 3] = exp_translation(w, r, n)  # 平移部分</span><br><span class="line">        exp_sigma[i][3, 3] = 1  # 末尾为 1，保持齐次坐标</span><br><span class="line"></span><br><span class="line">    # 前向运动学最终结果</span><br><span class="line">    T_ee_to_base = exp_sigma[0] @ exp_sigma[1] @ exp_sigma[2] @ exp_sigma[3] @ G_0</span><br><span class="line">    return T_ee_to_base</span><br><span class="line"></span><br><span class="line"># ===== 空间雅可比 =====</span><br><span class="line">def compute_jacobian(q):</span><br><span class="line">    n1, n2, n3, n4=q</span><br><span class="line">    a = 0.12</span><br><span class="line">    b = 0.124</span><br><span class="line">    c = 0.128</span><br><span class="line">    d = 0.024</span><br><span class="line">    # ----- J_v（线速度部分）-----</span><br><span class="line">    J_v = np.zeros((3, 4))</span><br><span class="line"></span><br><span class="line">    J_v[0, 0] = -np.sin(n1) * (a * np.cos(n2 + n3 + n4) + b * np.cos(n2 + n3) + d * np.cos(n2) + c * np.sin(n2))</span><br><span class="line">    J_v[0, 1] = np.cos(n1) * (-a * np.sin(n2 + n3 + n4) - b * np.sin(n2 + n3) + c * np.cos(n2) - d * np.sin(n2))</span><br><span class="line">    J_v[0, 2] = np.cos(n1) * (-a * np.sin(n2 + n3 + n4) - b * np.sin(n2 + n3))</span><br><span class="line">    J_v[0, 3] = -np.cos(n1) * a * np.sin(n2 + n3 + n4)</span><br><span class="line"></span><br><span class="line">    J_v[1, 0] = np.cos(n1) * (a * np.cos(n2 + n3 + n4) + b * np.cos(n2 + n3) + d * np.cos(n2) + c * np.sin(n2))</span><br><span class="line">    J_v[1, 1] = np.sin(n1) * (-a * np.sin(n2 + n3 + n4) - b * np.sin(n2 + n3) + c * np.cos(n2) - d * np.sin(n2))</span><br><span class="line">    J_v[1, 2] = -np.sin(n1) * (a * np.sin(n2 + n3 + n4) + b * np.sin(n2 + n3))</span><br><span class="line">    J_v[1, 3] = -np.sin(n1) * a * np.sin(n2 + n3 + n4)</span><br><span class="line"></span><br><span class="line">    J_v[2, 0] = 0</span><br><span class="line">    J_v[2, 1] = -(a * np.cos(n2 + n3 + n4) + b * np.cos(n2 + n3) + d * np.cos(n2) + c * np.sin(n2))</span><br><span class="line">    J_v[2, 2] = -(a * np.cos(n2 + n3 + n4) + b * np.cos(n2 + n3))</span><br><span class="line">    J_v[2, 3] = -a * np.cos(n2 + n3 + n4)</span><br><span class="line"></span><br><span class="line">    # ----- J_w（角速度部分）-----</span><br><span class="line">    J_w = np.zeros((3, 4))</span><br><span class="line"></span><br><span class="line">    J_w[0, :] = [0, -np.sin(n1), -np.sin(n1), -np.sin(n1)]</span><br><span class="line">    J_w[1, :] = [0, np.cos(n1), np.cos(n1), np.cos(n1)]</span><br><span class="line">    J_w[2, :] = [1, 0, 0, 0]</span><br><span class="line"></span><br><span class="line">    # 合并 J_v 和 J_w</span><br><span class="line">    Jacobian = np.vstack((J_v, J_w))</span><br><span class="line"></span><br><span class="line">    return J_v</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ===== 可达空间采样 =====</span><br><span class="line">N = 50000</span><br><span class="line">points = []</span><br><span class="line">colors = []</span><br><span class="line">sampled_J = []</span><br><span class="line"></span><br><span class="line">for _ in range(N):</span><br><span class="line">    q = np.array([</span><br><span class="line">        np.random.uniform(0, np.pi),</span><br><span class="line">        # np.random.uniform(-np.pi / 2, np.pi / 2),</span><br><span class="line">        # np.random.uniform(-np.pi / 2, np.pi / 2),</span><br><span class="line">        # np.random.uniform(-np.pi / 2, np.pi / 2)</span><br><span class="line">        np.random.uniform(0, np.pi / 2),</span><br><span class="line">        np.random.uniform(0, np.pi / 2),</span><br><span class="line">        np.random.uniform(-np.pi / 2, np.pi / 2)</span><br><span class="line">    ])</span><br><span class="line">    g = forward_kinematics(q,w_list,r_list,G_0)</span><br><span class="line">    pos = g[:3, 3]</span><br><span class="line">    pos_b = T_base_to_body @ g</span><br><span class="line">    pos_w = R_inertia_to_robot_base @ pos_b[:3,3]</span><br><span class="line">    # if pos[2]&lt;0:</span><br><span class="line">    #     print(q)</span><br><span class="line">    J = compute_jacobian(q)</span><br><span class="line">    manipulability = np.sqrt(np.linalg.det(J @ J.T) + 1e-6)</span><br><span class="line"></span><br><span class="line">    points.append(pos_w)</span><br><span class="line">    colors.append(manipulability)</span><br><span class="line"></span><br><span class="line">    if np.random.rand() &lt; 0.002:</span><br><span class="line">        sampled_J.append((pos_w, J))</span><br><span class="line"></span><br><span class="line">points = np.array(points)</span><br><span class="line">colors = np.array(colors)</span><br><span class="line"></span><br><span class="line"># ===== 绘制速度椭球函数 =====</span><br><span class="line"># def draw_ellipsoid(ax, center, cov, scale=0.05):</span><br><span class="line">#     U, s, _ = np.linalg.svd(cov)</span><br><span class="line">#     rx, ry, rz = scale * np.sqrt(s)</span><br><span class="line">#     u = np.linspace(0, 2 * np.pi, 10)</span><br><span class="line">#     v = np.linspace(0, np.pi, 10)</span><br><span class="line">#     x = rx * np.outer(np.cos(u), np.sin(v))</span><br><span class="line">#     y = ry * np.outer(np.sin(u), np.sin(v))</span><br><span class="line">#     z = rz * np.outer(np.ones_like(u), np.cos(v))</span><br><span class="line">#     for i in range(x.shape[0]):</span><br><span class="line">#         for j in range(x.shape[1]):</span><br><span class="line">#             [x[i,j], y[i,j], z[i,j]] = U @ np.array([x[i,j], y[i,j], z[i,j]]) + center</span><br><span class="line">#     ax.plot_surface(x, y, z, color=&#x27;orange&#x27;, alpha=0.3)</span><br><span class="line"></span><br><span class="line"># ===== 可视化 =====</span><br><span class="line">fig = plt.figure(figsize=(10, 8))</span><br><span class="line">ax = fig.add_subplot(111, projection=&#x27;3d&#x27;)</span><br><span class="line">p = ax.scatter(points[:, 0], points[:, 1], points[:, 2], c=colors, cmap=&#x27;viridis&#x27;, s=1)</span><br><span class="line"></span><br><span class="line"># 基座位置</span><br><span class="line">ax.scatter(0, 0, 0, color=&#x27;red&#x27;, s=100, marker=&#x27;*&#x27;, label=&#x27;Base Position&#x27;)</span><br><span class="line"></span><br><span class="line"># # 绘制部分椭球体</span><br><span class="line"># for pos, J in sampled_J:</span><br><span class="line">#     draw_ellipsoid(ax, pos, J @ J.T)</span><br><span class="line"></span><br><span class="line"># 凸包体积与边界</span><br><span class="line"># hull = ConvexHull(points)</span><br><span class="line"># volume = hull.volume</span><br><span class="line"># for s in hull.simplices:</span><br><span class="line">#     s = np.append(s, s[0])</span><br><span class="line">#     ax.plot(points[s, 0], points[s, 1], points[s, 2], &quot;k-&quot;, linewidth=0.3)</span><br><span class="line"></span><br><span class="line"># 图设置</span><br><span class="line">fig.colorbar(p, ax=ax, label=&quot;Manipulability&quot;)</span><br><span class="line">ax.set_title(&quot;Reachable Workspace with Velocity Ellipsoids and Convex Boundary&quot;)</span><br><span class="line">ax.set_xlabel(&quot;X [m]&quot;)</span><br><span class="line">ax.set_ylabel(&quot;Y [m]&quot;)</span><br><span class="line">ax.set_zlabel(&quot;Z [m]&quot;)</span><br><span class="line">ax.legend()</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"># 输出体积</span><br><span class="line">print(f&quot;可达空间近似体积: &#123;volume:.4f&#125; m³&quot;)</span><br><span class="line">def draw_robot_arm(ax, q, w_list, r_list, G_0, color=&#x27;r&#x27;):</span><br><span class="line">    T = np.eye(4)</span><br><span class="line">    points = [T[:3, 3]]  # 从基座开始</span><br><span class="line">    for i in range(4):</span><br><span class="line">        w = w_list[i]</span><br><span class="line">        r = r_list[i]</span><br><span class="line">        n = q[i]</span><br><span class="line">        exp_T = np.eye(4)</span><br><span class="line">        exp_T[:3, :3] = exp_rotation(w, n)</span><br><span class="line">        exp_T[:3, 3] = exp_translation(w, r, n)</span><br><span class="line">        T = T @ exp_T</span><br><span class="line">        pos=T@G_list[i]# 每个关节末端位置</span><br><span class="line">        # pos=pos[:3,3]</span><br><span class="line">        pos_b = T_base_to_body @ pos</span><br><span class="line">        pos_w = R_inertia_to_robot_base @ pos_b[:3,3]</span><br><span class="line">        points.append(pos_w)</span><br><span class="line">    T = T @ G_0</span><br><span class="line">    pos_b = T_base_to_body @ T</span><br><span class="line">    pos_w = R_inertia_to_robot_base @ pos_b[:3,3]</span><br><span class="line">    points.append(pos_w)  # 加上末端执行器</span><br><span class="line">    points = np.array(points)</span><br><span class="line">    ax.plot(points[:, 0], points[:, 1], points[:, 2], &#x27;-o&#x27;, color=color, linewidth=2, markersize=4)</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(10, 8))</span><br><span class="line">ax = fig.add_subplot(111, projection=&#x27;3d&#x27;)</span><br><span class="line">q_example = np.array([0.24678797, 0.48229641, 0.66201096, 0.50968185])</span><br><span class="line"># q_example = np.array([0, 0, 0, 0])</span><br><span class="line">draw_robot_arm(ax, q_example, w_list, r_list, G_0, color=&#x27;red&#x27;)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></p><h4 id="总结">总结</h4><p>D-H 表示方法需要的参数比 PoE 表示方法少，但D-H 表示方法需要添加中间参考坐标系，而且该坐标系并不能随意选取，且不同人选取的方法可以不一样，这就很可能导致同样的结构不同的人描述出来的结果不统一。并且当两个旋转轴近乎平行时，用 D-H 表示方法可能会产生病态矩阵</p>]]></content>
      
      
      
        <tags>
            
            <tag> 机械臂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>干扰观测器笔记（1）</title>
      <link href="/2025/04/13/DO/"/>
      <url>/2025/04/13/DO/</url>
      
        <content type="html"><![CDATA[<h2 id="disturbance-observer-study">Disturbance Observer Study</h2><h3 id="前言">前言</h3><p>近来笔者在完成本科毕设，用到一些与干扰估计相关的知识，现在主要用到ESO(Extended State Observer)状态扩张观测器和NDO(Nolinear Disturbance Observer)非线性干扰观测器。<br>笔者需要观测的是一个二阶拉格朗日动力学系统，其形式为： <span class="math display">$$M(\zeta)\ddot{\zeta}+C(\zeta)\dot{\zeta}+G(\zeta)=\tau+d\tag{1}$$</span></p><h3 id="esoextended-state-observer">ESO(Extended State Observer)</h3><p>观测器形式为： <span class="math display">$$\left\{\begin{array}{c}   z_{est}=z+h(v-\beta_{1}fal_{1}\\    V_{est}=V+h(D-\beta_{2}fal_{2}-M^{-1}(u-CV-G))\\    D_{est}=D-h\beta_{3}fal_{3} \end{array}\tag{2a}\right.$$</span> 其中： <span class="math display">$$fal(e,\alpha,\delta)=\begin{cases}sign(e)·\vert{e}\vert^{\alpha},\quad \vert{e}\vert\geq \delta\\\frac{e}{\delta^{1-\alpha}}, \quad \vert{e}\vert&lt;\delta\end{cases}\tag{2b}$$</span> 贴上matlab的function代码： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">function [Z_est, V_est, D_est] = Adaptive_MIMO_ESO(deta, beta1, beta2, beta3, k, u, y, h,M,C,G)</span><br><span class="line">% 自适应MIMO扩张状态观测器 (10 维) </span><br><span class="line">% - 估计状态: 10 维 (位置, 姿态, 机械臂力矩) % - 估计速度: 10 维 (速度, 角速度, 力矩变化率)</span><br><span class="line">% - 估计扰动: 10 维 (外力, 干扰) % </span><br><span class="line">% 输入: % deta - fal 平滑因子 </span><br><span class="line">% beta1, beta2, beta3 - 观测增益 </span><br><span class="line">% k - 自适应因子 % u - 10 维控制输入 (加速度, 角加速度, 机械臂力矩输入) </span><br><span class="line">% y - 10 维测量 (位置, 欧拉角, 机械臂力矩) </span><br><span class="line">% h - 离散步长 % % 输出: % Z_est - 10 维状态估计 (位置/角度/力矩)</span><br><span class="line">% V_est - 10 维速度估计 (速度/角速度/力矩率) </span><br><span class="line">% D_est - 10 维扰动估计 (外力/外干扰)</span><br><span class="line">% **状态维度**</span><br><span class="line">n = 10;  % 状态变量数量</span><br><span class="line"></span><br><span class="line">% **持久化变量（ESO 记忆前一时刻估计值）**</span><br><span class="line">persistent Z_prev V_prev D_prev</span><br><span class="line">if isempty(Z_prev),  Z_prev = zeros(n,1); end</span><br><span class="line">if isempty(V_prev),  V_prev = zeros(n,1); end</span><br><span class="line">if isempty(D_prev),  D_prev = zeros(n,1); end</span><br><span class="line"></span><br><span class="line">% **误差计算**</span><br><span class="line">e = Z_prev - y;  % 观测误差</span><br><span class="line"></span><br><span class="line">% **自适应增益**</span><br><span class="line">gain_limit = 10;</span><br><span class="line">beta1_adapt = beta1 * min(gain_limit, (1 + k * norm(e)));</span><br><span class="line">beta2_adapt = beta2 * min(gain_limit, (1 + k * norm(e)));</span><br><span class="line">beta3_adapt = beta3 * min(gain_limit, (1 + k * norm(e)));</span><br><span class="line"></span><br><span class="line">% **fal 非线性误差反馈**</span><br><span class="line">fal_e1 = fal(e, 0.5, deta);</span><br><span class="line">fal_e2 = fal(e, 0.5, deta);</span><br><span class="line">fal_e3 = fal(e, 0.8, deta);</span><br><span class="line"></span><br><span class="line">% **ESO 主方程**</span><br><span class="line">Z_half = Z_prev + (h / 2) * (V_prev - beta1_adapt * fal_e1);</span><br><span class="line">V_half = V_prev + (h / 2) * (inv(M)*D_prev - beta2_adapt * fal_e2 + inv(M)*(u-C*V_prev-G));</span><br><span class="line">D_half = D_prev - (h / 2) * beta3_adapt * fal_e3;</span><br><span class="line"></span><br><span class="line">% **梯形积分更新**</span><br><span class="line">Z_est = Z_prev + h * (V_half - beta1_adapt * fal_e1);</span><br><span class="line">V_est = V_prev + h * (inv(M)*D_half - beta2_adapt * fal_e2 + inv(M)*(u-C*V_prev-G));</span><br><span class="line">D_est = D_prev - h * beta3_adapt * fal_e3;</span><br><span class="line"></span><br><span class="line">% **更新持久化变量**</span><br><span class="line">Z_prev = Z_est;</span><br><span class="line">V_prev = V_est;</span><br><span class="line">D_prev = D_est;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">function fa = fal(e, alp, deta) % fal 函数 </span><br><span class="line">    eps_val = 1e-6; % 避免数值溢出 </span><br><span class="line">    fa = sign(e) .* max(eps_val, abs(e).^alp) .* (abs(e) &gt; deta) + e ./ max(eps_val, deta.^(1 - alp)) .* (abs(e) &lt;= deta); </span><br><span class="line">end </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h3 id="ndonolinear-disturbance-observer">NDO(Nolinear Disturbance Observer)</h3><p>系统表述为： <span class="math display">$$\left\{ \begin{array}{c}    \dot{x}=f(x)+g_{1}(x)u+g_{2}(x)d \\     y=x\end{array}\right. \tag{3}$$</span> 则观测器形式为： <span class="math display">$$\left\{ \begin{array}{c}    \dot{z}=-l(x)g_{2}(x)z-l(x)[g_{2}(x)p(x)+f(x)+g_{1}(x)] \\     \hat{d}=z+p(x)\end{array}\tag{4a}\right. $$</span> 在笔者需要观测的二阶系统中，<span class="math inline"><em>f</em>(<em>x</em>), <em>g</em><sub>1</sub>(<em>x</em>)<em>和</em><em>g</em><sub>2</sub>(<em>x</em>)<em>分</em><em>别</em><em>为</em>:</span>$ <span class="math display">$$\left\{ \begin{array}{c}    f(x)=\left[\begin{matrix}0_{10} &amp; I_{10}\\0_{10} &amp; -M^{-1}C  \\\end{matrix}\right] \\\\     g_{1}(x)=g_{2}(x)=\left[\begin{matrix}0_{10} \\M^{-1}  \\\end{matrix}\right]\end{array}\tag{4b}\right. $$</span></p><p>贴上matlab的function代码: <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">function [dhat,dotz] = NDO(u,q,qdot,M,C,G,z)</span><br><span class="line">    x=[q;qdot];</span><br><span class="line">    A=[zeros(10,10) eye(10,10);</span><br><span class="line">       zeros(10,10) -inv(M)*C];</span><br><span class="line">    B=[zeros(10,10);</span><br><span class="line">        inv(M)];</span><br><span class="line">    C=[ones(1,10) zeros(1,10)];</span><br><span class="line">    D=0;</span><br><span class="line">    Bd=[zeros(10,10);</span><br><span class="line">        inv(M)];</span><br><span class="line">    Aob=[zeros(10,10) eye(10,10);</span><br><span class="line">         zeros(10,10) -inv(M)*C];</span><br><span class="line">    Bob=[zeros(10,10);</span><br><span class="line">        inv(M)];</span><br><span class="line">    Cob=[ones(1,10) zeros(1,10)];</span><br><span class="line">    u=u-G;</span><br><span class="line">    g1=Bob;</span><br><span class="line">    g2=Bob;%20*10</span><br><span class="line">    Lob_2=diag([0.2,0.2,0.2,0.4,0.4,0.4,0.8,0.8,0.8,0.8]);</span><br><span class="line">    Lob=[2*zeros(10,10) Lob_2];%10*20</span><br><span class="line"></span><br><span class="line">    px=Lob*x;%10*1</span><br><span class="line">    fx=A*x;%20*1</span><br><span class="line">    % persistent z</span><br><span class="line">    % if isempty(z), z = zeros(10,1); end</span><br><span class="line">    dotz=-Lob*g2*z-Lob*(g2*px+fx+g1*u);</span><br><span class="line">    dhat=z+px;</span><br></pre></td></tr></table></figure></p><h3 id="总结">总结</h3><p>ESO普遍应用于ADRC(自抗扰控制)中，当然也可以用于其它的控制框架中，好处是在于不需要知道系统精确模型，但也正因如此，它只能够观测到外部干扰，而无法很好地解释它的机理； NDO的最大优势既是简单好用，同时它需要有控制系统的具体物理模型，他是可以对高阶干扰进行分别观测的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 干扰观测器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四旋翼无人机动力学与控制(3)-路径规划</title>
      <link href="/2024/11/05/quad03/"/>
      <url>/2024/11/05/quad03/</url>
      
        <content type="html"><![CDATA[<div id="content_views" class="htmledit_views"><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本篇是这个小项目的最后一篇，仓库地址：<a href="https://gitee.com/gyxGYX123/UAV_Guo" rel="nofollow" title="四旋翼无人机仿真建模: 本仓库实现了四旋翼无人机的动力学仿真建模，并在此基础上完成了控制器的设计，包括串级PID、LQR、MPC等，实现了位置跟踪和路径规划。">四旋翼无人机仿真建模: 本仓库实现了四旋翼无人机的动力学仿真建模，并在此基础上完成了控制器的设计，包括串级PID、LQR、MPC等，实现了位置跟踪和路径规划。</a></p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 主要是做了一个路径规划用于验证之前的<a href="https://so.csdn.net/so/search?q=%E6%8E%A7%E5%88%B6%E5%99%A8&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=%E6%8E%A7%E5%88%B6%E5%99%A8&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;控制器\&quot;}&quot;}" data-tit="控制器" data-pretit="控制器">控制器</a>设计是否能够跟踪上规划的路径进而评判控制器的优劣，采用<span style="color:#4472c4;">APF-RRT</span>路径规划<span class="edu-hl hl hl-1" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;word\&quot;:\&quot;算法\&quot;}&quot;}" data-tit="算法" data-pretit="算法">算法</span>，话不多说上代码：</p> <p><img alt height="900" src="https://i-blog.csdnimg.cn/direct/1876d9c6367943f0957014984123c974.png" width="1200"></p> <pre data-index="0" class="set-code-hide" name="code"><code class="language-python hljs"><ol class="hljs-ln hundred" style="width:981px"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Author：gyx</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Usage: plan</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Last change: 2024-7-20</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> random</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">from</span> scipy.interpolate <span class="hljs-keyword">import</span> CubicSpline</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">from</span> scipy.interpolate <span class="hljs-keyword">import</span> BSpline</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">from</span> scipy.ndimage <span class="hljs-keyword">import</span> gaussian_filter1d</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">class</span> <span class="hljs-title class_">APF_RRTStar</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, start, goal, obstacle_list, x_limits, y_limits, robot_radius=<span class="hljs-number">0.5</span></span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.start = start</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.goal = goal</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.obstacle_list = obstacle_list</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.x_limits = x_limits</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.y_limits = y_limits</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.robot_radius = robot_radius  <span class="hljs-comment"># Added robot radius</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.tree_start = [start]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.tree_goal = [goal]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.parent_start = &#123;start: <span class="hljs-literal">None</span>&#125;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.parent_goal = &#123;goal: <span class="hljs-literal">None</span>&#125;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.goal_reached = <span class="hljs-literal">False</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.step_size = <span class="hljs-number">0.8</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.max_iterations = <span class="hljs-number">10000</span>  <span class="hljs-comment"># Reasonable iteration limit</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.connection_point = <span class="hljs-literal">None</span>  <span class="hljs-comment"># To store the connection point of both trees</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">distance</span>(<span class="hljs-params">self, point1, point2</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> np.linalg.norm(np.array(point1) - np.array(point2))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">is_collision_free</span>(<span class="hljs-params">self, point</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> (ox, oy, radius) <span class="hljs-keyword">in</span> self.obstacle_list:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> self.distance((ox, oy), point) &lt;= (radius + self.robot_radius):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_random_point</span>(<span class="hljs-params">self, goal_bias</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> random.random() &lt; goal_bias:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">return</span> self.goal</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            point = (random.uniform(self.x_limits[<span class="hljs-number">0</span>], self.x_limits[<span class="hljs-number">1</span>]),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                     random.uniform(self.y_limits[<span class="hljs-number">0</span>], self.y_limits[<span class="hljs-number">1</span>]))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> self.is_collision_free(point):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-keyword">return</span> point</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_nearest_node</span>(<span class="hljs-params">self, point, tree</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        distances = [self.distance(node, point) <span class="hljs-keyword">for</span> node <span class="hljs-keyword">in</span> tree]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        nearest_index = np.argmin(distances)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> tree[nearest_index]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">generate_new_node</span>(<span class="hljs-params">self, from_node, to_point</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        direction = np.array(to_point) - np.array(from_node)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        length = np.linalg.norm(direction)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> length == <span class="hljs-number">0</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        direction = direction / length</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        new_node = <span class="hljs-built_in">tuple</span>(np.array(from_node) + self.step_size * direction)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> self.is_collision_free(new_node):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">return</span> new_node</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">connect_trees</span>(<span class="hljs-params">self, node_from_start, node_from_goal</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> self.distance(node_from_start, node_from_goal) &lt; self.step_size</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="65"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="66"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">potential_field</span>(<span class="hljs-params">self, point</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="67"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        attractive_force = np.array(self.goal) - np.array(point)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="68"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        repulsive_force = np.zeros(<span class="hljs-number">2</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="69"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> (ox, oy, radius) <span class="hljs-keyword">in</span> self.obstacle_list:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="70"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            obstacle_vector = np.array(point) - np.array((ox, oy))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="71"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            distance = np.linalg.norm(obstacle_vector)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="72"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> distance &lt;= (radius + self.robot_radius):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="73"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                repulsive_force += obstacle_vector / (distance ** <span class="hljs-number">2</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="74"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> attractive_force + repulsive_force</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="75"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="76"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">search_path</span>(<span class="hljs-params">self, goal_bias=<span class="hljs-number">0.1</span></span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="77"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        iterations = <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="78"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> self.goal_reached <span class="hljs-keyword">and</span> iterations &lt; self.max_iterations:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="79"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            iterations += <span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="80"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="81"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment"># Extend the start tree</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="82"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            random_point_start = self.get_random_point(goal_bias)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="83"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            nearest_node_start = self.get_nearest_node(random_point_start, self.tree_start)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="84"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            new_node_start = self.generate_new_node(nearest_node_start, random_point_start)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="85"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="86"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> new_node_start <span class="hljs-keyword">and</span> self.is_collision_free(new_node_start):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="87"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                self.tree_start.append(new_node_start)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="88"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                self.parent_start[new_node_start] = nearest_node_start</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="89"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="90"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                nearest_node_goal = self.get_nearest_node(new_node_start, self.tree_goal)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="91"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-keyword">if</span> self.connect_trees(new_node_start, nearest_node_goal):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="92"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    self.goal_reached = <span class="hljs-literal">True</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="93"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    self.connection_point = (new_node_start, nearest_node_goal)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="94"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="95"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment"># Extend the goal tree</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="96"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            random_point_goal = self.get_random_point(goal_bias)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="97"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            nearest_node_goal = self.get_nearest_node(random_point_goal, self.tree_goal)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="98"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            new_node_goal = self.generate_new_node(nearest_node_goal, random_point_goal)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="99"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="100"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> new_node_goal <span class="hljs-keyword">and</span> self.is_collision_free(new_node_goal):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="101"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                self.tree_goal.append(new_node_goal)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="102"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                self.parent_goal[new_node_goal] = nearest_node_goal</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="103"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="104"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                nearest_node_start = self.get_nearest_node(new_node_goal, self.tree_start)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="105"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-keyword">if</span> self.connect_trees(new_node_goal, nearest_node_start):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="106"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    self.goal_reached = <span class="hljs-literal">True</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="107"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    self.connection_point = (nearest_node_start, new_node_goal)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="108"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="109"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> self.goal_reached:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="110"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-built_in">print</span>(<span class="hljs-string">"Failed to find a path within the iteration limit."</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="111"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">return</span> []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="112"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="113"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># Construct the path</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="114"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        path_start = []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="115"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        path_goal = []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="116"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        node = self.connection_point[<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="117"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">while</span> node <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="118"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            path_start.append(node)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="119"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            node = self.parent_start[node]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="120"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="121"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        node = self.connection_point[<span class="hljs-number">1</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="122"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">while</span> node <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="123"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            path_goal.append(node)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="124"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            node = self.parent_goal[node]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="125"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="126"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        path_start.reverse()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="127"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        path = [self.start]+path_start + path_goal+[self.goal]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="128"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> path</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="129"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="130"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">smooth_path</span>(<span class="hljs-params">self, path</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="131"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(path) &lt; <span class="hljs-number">3</span>:  <span class="hljs-comment"># No need to smooth if path has less than 3 points</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="132"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">return</span> path</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="133"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="134"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        x = [point[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> point <span class="hljs-keyword">in</span> path]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="135"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        y = [point[<span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> point <span class="hljs-keyword">in</span> path]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="136"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="137"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># 调整采样点数量</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="138"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        num_points = <span class="hljs-built_in">len</span>(path) * <span class="hljs-number">5</span>  <span class="hljs-comment"># 增加采样点数量</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="139"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        t = np.linspace(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(path) - <span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(path))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="140"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        t_new = np.linspace(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(path) - <span class="hljs-number">1</span>, num=num_points)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="141"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="142"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># 使用三次样条进行插值</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="143"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        cs_x = CubicSpline(t, x)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="144"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        cs_y = CubicSpline(t, y)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="145"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        smooth_x = cs_x(t_new)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="146"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        smooth_y = cs_y(t_new)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="147"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="148"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># 使用高斯滤波器平滑路径</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="149"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        smooth_x = gaussian_filter1d(smooth_x, sigma=<span class="hljs-number">10</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="150"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        smooth_y = gaussian_filter1d(smooth_y, sigma=<span class="hljs-number">10</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="151"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="152"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        smooth_path = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">zip</span>(smooth_x, smooth_y))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="153"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="154"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> smooth_path</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="155"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="156"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="157"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">draw_graph</span>(<span class="hljs-params">self, path=<span class="hljs-literal">None</span>, smooth_path=<span class="hljs-literal">None</span></span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="158"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        plt.figure()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="159"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> (ox, oy, radius) <span class="hljs-keyword">in</span> self.obstacle_list:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="160"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            circle = plt.Circle((ox, oy), radius, color=<span class="hljs-string">'r'</span>, alpha=<span class="hljs-number">0.5</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="161"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            plt.gca().add_patch(circle)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="162"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> node <span class="hljs-keyword">in</span> self.tree_start:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="163"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> self.parent_start[node] <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="164"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                plt.plot([node[<span class="hljs-number">0</span>], self.parent_start[node][<span class="hljs-number">0</span>]], [node[<span class="hljs-number">1</span>], self.parent_start[node][<span class="hljs-number">1</span>]], <span class="hljs-string">"g-"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="165"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> node <span class="hljs-keyword">in</span> self.tree_goal:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="166"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> self.parent_goal[node] <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="167"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                plt.plot([node[<span class="hljs-number">0</span>], self.parent_goal[node][<span class="hljs-number">0</span>]], [node[<span class="hljs-number">1</span>], self.parent_goal[node][<span class="hljs-number">1</span>]], <span class="hljs-string">"b-"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="168"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> path:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="169"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            plt.plot([x <span class="hljs-keyword">for</span> (x, y) <span class="hljs-keyword">in</span> path], [y <span class="hljs-keyword">for</span> (x, y) <span class="hljs-keyword">in</span> path], <span class="hljs-string">'-o'</span>, color=<span class="hljs-string">'orange'</span>, label=<span class="hljs-string">'Original Path'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="170"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> smooth_path:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="171"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            plt.plot([x <span class="hljs-keyword">for</span> (x, y) <span class="hljs-keyword">in</span> smooth_path], [y <span class="hljs-keyword">for</span> (x, y) <span class="hljs-keyword">in</span> smooth_path], <span class="hljs-string">'-'</span>, color=<span class="hljs-string">'purple'</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="172"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                     label=<span class="hljs-string">'Smoothed Path'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="173"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        plt.plot(self.start[<span class="hljs-number">0</span>], self.start[<span class="hljs-number">1</span>], <span class="hljs-string">"bo"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="174"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        plt.plot(self.goal[<span class="hljs-number">0</span>], self.goal[<span class="hljs-number">1</span>], <span class="hljs-string">"ro"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="175"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        plt.xlim(self.x_limits)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="176"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        plt.ylim(self.y_limits)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="177"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        plt.grid(<span class="hljs-literal">True</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="178"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        plt.legend()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="179"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># plt.show()</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="180"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="181"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="182"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="183"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    start = (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="184"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    goal = (<span class="hljs-number">10</span>, <span class="hljs-number">10</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="185"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    obstacle_list = [</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="186"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0.2</span>),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="187"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">1</span>),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="188"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1.2</span>),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="189"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0.4</span>),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="190"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">8</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0.5</span>),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="191"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">0.4</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="192"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    ]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="193"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    x_limits = (<span class="hljs-number">0</span>, <span class="hljs-number">10</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="194"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    y_limits = (<span class="hljs-number">0</span>, <span class="hljs-number">10</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="195"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    robot_radius = <span class="hljs-number">0.25</span>  <span class="hljs-comment"># Set the robot radius</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="196"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="197"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    apf_rrt_star = APF_RRTStar(start, goal, obstacle_list, x_limits, y_limits, robot_radius)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="198"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    path = apf_rrt_star.search_path()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="199"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="200"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">if</span> path:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="201"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        smooth_path = apf_rrt_star.smooth_path(path)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="202"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        apf_rrt_star.draw_graph(path, smooth_path)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="203"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-built_in">print</span>(smooth_path)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="204"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">else</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="205"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">"No path found."</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="206"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="207"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="208"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">class</span> <span class="hljs-title class_">RTT_planer</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="209"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, start, goal, obstacle_list, num_trials=<span class="hljs-number">10</span></span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="210"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.start = start</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="211"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.goal = goal</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="212"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.obstacle_list = obstacle_list</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="213"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.num_trials = num_trials  <span class="hljs-comment"># 进行多次规划的次数</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="214"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="215"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">way_plan</span>(<span class="hljs-params">self</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="216"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        x_limits = (<span class="hljs-number">0</span>, <span class="hljs-number">10</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="217"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        y_limits = (<span class="hljs-number">0</span>, <span class="hljs-number">10</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="218"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        robot_radius = <span class="hljs-number">0.5</span>  <span class="hljs-comment"># Set the robot radius</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="219"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="220"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        best_path = <span class="hljs-literal">None</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="221"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        best_smooth_path = <span class="hljs-literal">None</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="222"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        best_rrt = <span class="hljs-literal">None</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="223"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        min_length = <span class="hljs-built_in">float</span>(<span class="hljs-string">'inf'</span>)  <span class="hljs-comment"># 初始化为正无穷</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="224"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="225"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(self.num_trials):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="226"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            apf_rrt_star = APF_RRTStar(self.start, self.goal, self.obstacle_list, x_limits, y_limits, robot_radius)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="227"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            path = apf_rrt_star.search_path()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="228"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="229"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> path:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="230"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                smooth_path = apf_rrt_star.smooth_path(path)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="231"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-comment"># 计算路径的总长度</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="232"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                length = <span class="hljs-built_in">sum</span>(np.linalg.norm(np.array(smooth_path[i]) - np.array(smooth_path[i+<span class="hljs-number">1</span>]))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="233"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                             <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(smooth_path) - <span class="hljs-number">1</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="234"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="235"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-comment"># 比较并更新最优路径</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="236"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-keyword">if</span> length &lt; min_length:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="237"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    min_length = length</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="238"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    best_path = path</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="239"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    best_smooth_path = smooth_path</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="240"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    best_rrt = apf_rrt_star</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="241"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="242"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> best_path:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="243"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment"># apf_rrt_star = APF_RRTStar(self.start, self.goal, self.obstacle_list, x_limits, y_limits, robot_radius)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="244"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            best_rrt.draw_graph(best_path, best_smooth_path)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="245"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">return</span> best_path</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="246"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">else</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="247"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-built_in">print</span>(<span class="hljs-string">"No path found."</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="248"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="249"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="250"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="251"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    planner = RTT_planer(start=(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>), goal=(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>), obstacle_list=[</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="252"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0.6</span>),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="253"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">1</span>),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="254"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1.2</span>),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="255"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0.4</span>),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="256"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">8</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0.5</span>),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="257"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">0.4</span>),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="258"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        (<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0.5</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="259"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    ], num_trials=<span class="hljs-number">10</span>)  <span class="hljs-comment"># 进行10次规划</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="260"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    best_path = planner.way_plan()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="261"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">if</span> best_path:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="262"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">"Best path found:"</span>, best_path)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="263"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(best_path))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="264"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    plt.show()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="265"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="266"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="267"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="268"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="269"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># if __name__ == '__main__':</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="270"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment">#     main()</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="271"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment">#     plt.show()</span></div></div></li></ol></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreWhite.png" alt title></span></div><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:0,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:0,&quot;runIdx&quot;:-1}}"></button></pre> <p>最后是尝试了一下结合模糊控制进行跟踪，具体代码在仓库中，这里就不贴出来了，效果如下：</p> <p><img alt height="900" src="https://i-blog.csdnimg.cn/direct/9d3f54c22e804547862d8b35d49d07dd.png" width="1200"></p>                </div><div data-report-view="{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;spm&quot;:&quot;1001.2101.3001.6548&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/perfectdisaster/article/details/144170119&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}"><div></div></div>        ]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>四旋翼无人机动力学与控制(2)-飞行器控制</title>
      <link href="/2024/11/04/quad02/"/>
      <url>/2024/11/04/quad02/</url>
      
        <content type="html"><![CDATA[<div id="content_views" class="htmledit_views"><p>继上一篇<a href="https://so.csdn.net/so/search?q=%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;博客搭建\&quot;}&quot;}" data-tit="博客搭建" data-pretit="博客搭建">博客搭建</a>完无人机的动力学<span class="words-blog hl-git-1" data-tit="模型" data-pretit="模型">模型</span>之后，进而可以开始设计控制<span class="edu-hl hl hl-1" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;word\&quot;:\&quot;算法\&quot;}&quot;}" data-tit="算法" data-pretit="算法">算法</span>，首先需要了解常见的飞控策略：</p> <p>还是先附上仓库地址：<a href="https://gitee.com/gyxGYX123/UAV_Guo" rel="nofollow" title="四旋翼无人机仿真建模: 本仓库实现了四旋翼无人机的动力学仿真建模，并在此基础上完成了控制器的设计，包括串级PID、LQR、MPC等，实现了位置跟踪和路径规划。">四旋翼无人机仿真建模: 本仓库实现了四旋翼无人机的动力学仿真建模，并在此基础上完成了控制器的设计，包括串级PID、LQR、MPC等，实现了位置跟踪和路径规划。</a></p> <p><img alt height="900" src="https://i-blog.csdnimg.cn/direct/94830afb67eb42a8b24057d5c77384dc.png" width="1200"></p> <p>总体框架如上图，本项目采用常见的分级控制，由内到外分为角速率环、姿态环、速度环和位置环。上一篇中笔者写过，我将无人机的运动浅显的理解为依靠四个轴上的电机带动螺旋桨提供升力，通过调节电机转速制造升力差引起角度的偏转进而带动其运动，因此无人机的角度偏转是无人机在xy平面内运动的前提。换句话说，控制好角度是控制好位置的前提，而采用角速率环和速度环是由于被控量（位置、姿态）和控制量（加速度、角加速度）之间差了两个阶次，只使用一个环无法控制中间变量，容易导致超调，因此加入一个中间环来达到更好的控制效果。</p> <p>本项目中采用了PID、LQR和MPC三种控制算法，以下是控制部分的代码：</p> <p>（1）PID：原理不做阐述</p> <pre data-index="0" class="set-code-hide" name="code"><code class="language-python hljs"><ol class="hljs-ln hundred" style="width:1227px"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Author：gyx</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Usage: pid controller</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Last change: 2024-7-20</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">class</span> <span class="hljs-title class_">PIDController</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, Kp, Ki, Kd, integrator_max=<span class="hljs-literal">None</span>, integrator_min=<span class="hljs-literal">None</span>,<span class="hljs-built_in">max</span>=<span class="hljs-literal">None</span>,<span class="hljs-built_in">min</span>=<span class="hljs-literal">None</span></span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.Kp = Kp</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.Ki = Ki</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.Kd = Kd</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.integrator = <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.prev_error = <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.integrator_max = integrator_max</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.integrator_min = integrator_min</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.<span class="hljs-built_in">max</span> = <span class="hljs-built_in">max</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.<span class="hljs-built_in">min</span> = <span class="hljs-built_in">min</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.error = <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.measurement_history = []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.setpoint_history = []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">reset</span>(<span class="hljs-params">self</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.integrator = <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.prev_error = <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">update</span>(<span class="hljs-params">self, setpoint, measurement, dt</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.measurement_history.append(measurement)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.setpoint_history.append(setpoint)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        error = setpoint - measurement</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.error = error</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.integrator += error * dt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> self.integrator_max <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> self.integrator &gt; self.integrator_max:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.integrator = self.integrator_max</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> self.integrator_min <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> self.integrator &lt; self.integrator_min:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.integrator = self.integrator_min</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        derivative = (error - self.prev_error) / dt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        output = self.Kp * error + self.Ki * self.integrator + self.Kd * derivative</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.prev_error = error</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> self.<span class="hljs-built_in">max</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> self.<span class="hljs-built_in">min</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            output = np.clip(output,self.<span class="hljs-built_in">min</span>,self.<span class="hljs-built_in">max</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> output</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_error</span>(<span class="hljs-params">self,fig,i,title=<span class="hljs-string">'none'</span></span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># plt.plot(self.setpoint_history, [i for i in self.setpoint_history], linewidth =2.0, label = r"setpoint",color='b', linestyle='dotted')</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># plt.plot(self.measurement_history, [i for i in self.measurement_history], linewidth =2.0, label = r"setpoint",color='r',linestyle='dashed')</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax = fig.add_subplot(<span class="hljs-number">131</span> + i)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.plot([i/<span class="hljs-number">100</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(self.setpoint_history))], self.setpoint_history, label=<span class="hljs-string">'setpoint'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.plot([i/<span class="hljs-number">100</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(self.measurement_history))], self.measurement_history,label=<span class="hljs-string">'measurement'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.set_xlabel(<span class="hljs-string">'time'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.set_ylabel(<span class="hljs-string">'value'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.set_title(title)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.legend()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">class</span> <span class="hljs-title class_">CascadePIDController</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, outer_controller, inner_controller</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.outer_controller = outer_controller</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.inner_controller = inner_controller</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">update</span>(<span class="hljs-params">self, outer_setpoint, outer_measurement, inner_measurement, dt</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        outer_output = self.outer_controller.update(outer_setpoint, outer_measurement, dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="65"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        inner_output = self.inner_controller.update(outer_output, inner_measurement, dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="66"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> inner_output</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="67"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="68"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="69"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">class</span> <span class="hljs-title class_">posion_pos_controller</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="70"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,params</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="71"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.params = params</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="72"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="73"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">position_controller</span>(<span class="hljs-params">self</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="74"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        x_position_controller = PIDController(self.params.Kpxp, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, integrator_max=<span class="hljs-number">1</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="75"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                              integrator_min=-<span class="hljs-number">1</span>, <span class="hljs-built_in">max</span>=<span class="hljs-number">5</span>, <span class="hljs-built_in">min</span>=-<span class="hljs-number">5</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="76"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        x_velocity_controller = PIDController(self.params.Kvxp, self.params.Kvxi, self.params.Kvxd, integrator_max=<span class="hljs-number">1</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="77"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                              integrator_min=-<span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="78"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        y_position_controller = PIDController(self.params.Kpyp, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, integrator_max=<span class="hljs-number">1</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="79"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                              integrator_min=-<span class="hljs-number">1</span>, <span class="hljs-built_in">max</span>=<span class="hljs-number">5</span>, <span class="hljs-built_in">min</span>=-<span class="hljs-number">5</span>, )</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="80"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        y_velocity_controller = PIDController(self.params.Kvyp, self.params.Kvyi, self.params.Kvyd, integrator_max=<span class="hljs-number">1</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="81"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                              integrator_min=-<span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="82"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="83"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        height_position_controller = PIDController(self.params.Kpzp, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, integrator_max=<span class="hljs-number">1</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="84"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                                   integrator_min=-<span class="hljs-number">1</span>, <span class="hljs-built_in">min</span>=-<span class="hljs-number">3</span>, <span class="hljs-built_in">max</span>=<span class="hljs-number">3</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="85"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        height_velocity_controller = PIDController(self.params.Kvzp, self.params.Kvzi, self.params.Kvzd, integrator_max=<span class="hljs-number">1</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="86"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                                   integrator_min=-<span class="hljs-number">1</span>, <span class="hljs-built_in">min</span>=-<span class="hljs-number">0.4</span>, <span class="hljs-built_in">max</span>=<span class="hljs-number">0.4</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="87"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        x_controller = CascadePIDController(x_position_controller, x_velocity_controller)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="88"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        y_controller = CascadePIDController(y_position_controller, y_velocity_controller)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="89"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        height_controller = CascadePIDController(height_position_controller, height_velocity_controller)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="90"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> [x_controller,y_controller,height_controller]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="91"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="92"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">pos_controller</span>(<span class="hljs-params">self</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="93"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        DEG2RAD = self.params.DEG2RAD</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="94"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        roll_angle_controller = PIDController(self.params.Kp_RP_ANGLE, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, integrator_max=<span class="hljs-number">1</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="95"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                              integrator_min=-<span class="hljs-number">1</span>, <span class="hljs-built_in">max</span>=DEG2RAD * <span class="hljs-number">35</span>, <span class="hljs-built_in">min</span>=-DEG2RAD * <span class="hljs-number">35</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="96"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        roll_rate_controller = PIDController(self.params.Kp_RP_AngleRate, self.params.Ki_RP_AngleRate,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="97"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                             self.params.Kd_RP_AngleRate, integrator_max=<span class="hljs-number">1</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="98"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                             integrator_min=-<span class="hljs-number">1</span>, <span class="hljs-built_in">max</span>=DEG2RAD * <span class="hljs-number">220</span>, <span class="hljs-built_in">min</span>=-DEG2RAD * <span class="hljs-number">220</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="99"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        roll_controller = CascadePIDController(roll_angle_controller, roll_rate_controller)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="100"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="101"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        pitch_angle_controller = PIDController(self.params.Kp_RP_ANGLE, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, integrator_max=<span class="hljs-number">1</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="102"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                               integrator_min=-<span class="hljs-number">1</span>, <span class="hljs-built_in">max</span>=DEG2RAD * <span class="hljs-number">35</span>, <span class="hljs-built_in">min</span>=-DEG2RAD * <span class="hljs-number">35</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="103"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        pitch_rate_controller = PIDController(self.params.Kp_RP_AngleRate, self.params.Ki_RP_AngleRate,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="104"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                              self.params.Kd_RP_AngleRate, integrator_max=<span class="hljs-number">1</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="105"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                              integrator_min=-<span class="hljs-number">1</span>, <span class="hljs-built_in">max</span>=DEG2RAD * <span class="hljs-number">220</span>, <span class="hljs-built_in">min</span>=-DEG2RAD * <span class="hljs-number">220</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="106"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        pitch_controller = CascadePIDController(pitch_angle_controller, pitch_rate_controller)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="107"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        yaw_angle_controller = PIDController(self.params.Kp_RP_ANGLE, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, integrator_max=<span class="hljs-number">1</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="108"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                             integrator_min=-<span class="hljs-number">1</span>, <span class="hljs-built_in">max</span>=DEG2RAD * <span class="hljs-number">35</span>, <span class="hljs-built_in">min</span>=-DEG2RAD * <span class="hljs-number">35</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="109"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        yaw_rate_controller = PIDController(self.params.Kp_YAW_AngleRate, self.params.Ki_YAW_AngleRate,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="110"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                            self.params.Kd_YAW_AngleRate, integrator_max=<span class="hljs-number">1</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="111"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                            integrator_min=-<span class="hljs-number">1</span>, <span class="hljs-built_in">max</span>=DEG2RAD * <span class="hljs-number">220</span>, <span class="hljs-built_in">min</span>=-DEG2RAD * <span class="hljs-number">220</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="112"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        yaw_controller = CascadePIDController(yaw_angle_controller, yaw_rate_controller)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="113"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> [roll_controller,pitch_controller,yaw_controller]</div></div></li></ol></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreWhite.png" alt title></span></div><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:0,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:0,&quot;runIdx&quot;:-1}}"></button></pre> <p>（2）LQR：</p> <p><img alt height="900" src="https://i-blog.csdnimg.cn/direct/72903ab8409b4ba0ae088becbd653a3c.png" width="1200"></p> <pre data-index="1" class="set-code-hide" name="code"><code class="language-python hljs"><ol class="hljs-ln" style="width:1098px"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Author：gyx</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Usage: LQR controller</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Last change: 2024-7-20</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">class</span> <span class="hljs-title class_">LQRController</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, A, B, Q, R</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.A = A</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.B = B</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.Q = Q</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.R = R</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.measurement_history = []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.setpoint_history = []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">lqr_solve</span>(<span class="hljs-params">self</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        n = self.A.shape[<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        m = self.B.shape[<span class="hljs-number">1</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># Riccati equation using a Lyapunov approach</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Z = np.vstack([</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            np.hstack([self.A, -self.B @ np.linalg.inv(self.R) @ self.B.T]),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            np.hstack([-self.Q, -self.A.T])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        eigvals, eigvecs = np.linalg.eig(Z)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># Select stable eigenvalues</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        stable_indices = np.where(np.real(eigvals) &lt; <span class="hljs-number">0</span>)[<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        eigvecs_stable = eigvecs[:, stable_indices]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        X = eigvecs_stable[:n, :]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Y = eigvecs_stable[n:, :]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># Solve P</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        P = np.real(Y @ np.linalg.inv(X))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># Compute gain</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        K = np.linalg.inv(self.R) @ self.B.T @ P</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        eigVals, _ = np.linalg.eig(self.A - self.B @ K)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> K, P, eigVals</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">update</span>(<span class="hljs-params">self, setpoint, measurement</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.measurement_history.append(measurement)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.setpoint_history.append(setpoint)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        K, _, _ = self.lqr_solve()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        u = -K @ (measurement - setpoint)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> u</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_error</span>(<span class="hljs-params">self, title=<span class="hljs-string">'none'</span></span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.setpoint_history = np.array(self.setpoint_history)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.measurement_history = np.array(self.measurement_history)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        fig = plt.figure(figsize=(<span class="hljs-number">14</span>, <span class="hljs-number">4</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        subtitle=[<span class="hljs-string">'x'</span>,<span class="hljs-string">'y'</span>,<span class="hljs-string">'z'</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(self.setpoint_history[<span class="hljs-number">0</span>])):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax = fig.add_subplot(<span class="hljs-number">131</span>+i)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax.plot([i / <span class="hljs-number">100</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(self.setpoint_history[:,i]))], self.setpoint_history[:,i], label=<span class="hljs-string">'setpoint'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax.plot([i / <span class="hljs-number">100</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(self.measurement_history[:,i]))], self.measurement_history[:,i], label=<span class="hljs-string">'measurement'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax.set_xlabel(<span class="hljs-string">'time'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax.set_ylabel(<span class="hljs-string">'value'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax.set_title(subtitle[i]+title)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax.legend()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        plt.tight_layout()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># fig.legend()</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="65"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="66"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="67"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="68"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    A = np.array([[<span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>], [-<span class="hljs-number">1.</span>, -<span class="hljs-number">1.</span>]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="69"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    B = np.array([[<span class="hljs-number">0.</span>], [<span class="hljs-number">1.</span>]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="70"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    Q = np.array([[<span class="hljs-number">1.</span>, <span class="hljs-number">0.</span>], [<span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="71"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    R = np.array([[<span class="hljs-number">1.</span>]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="72"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="73"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    controller = LQRController(A, B, Q, R)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="74"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    K, P, eigVals = controller.lqr_solve()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="75"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    x = np.array([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="76"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    r = np.array([<span class="hljs-number">1</span>, <span class="hljs-number">0</span>])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="77"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    u = controller.update(np.array([<span class="hljs-number">1</span>, <span class="hljs-number">0</span>]), np.array([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="78"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="79"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"LQR gain matrix K:"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="80"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-built_in">print</span>(K)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="81"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"\nSolution to Riccati equation P:"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="82"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-built_in">print</span>(P)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="83"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"\nClosed loop system eigenvalues:"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="84"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-built_in">print</span>(eigVals)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="85"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"Control value:"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="86"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-built_in">print</span>(u)</div></div></li></ol></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreWhite.png" alt title></span></div><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:1,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:1,&quot;runIdx&quot;:-1}}"></button></pre> <p>（3）MPC：</p> <p><img alt height="900" src="https://i-blog.csdnimg.cn/direct/82e4a0ae3eee43e4b4bd356535e804bc.png" width="1200"></p> <pre data-index="2" class="set-code-hide" name="code"><code class="language-python hljs"><ol class="hljs-ln hundred" style="width:958px"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Author：gyx</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Usage: MPC controller</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Last change: 2024-7-20</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MPCController</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, A, B, C, N, Q, R, u_min, u_max, reg=<span class="hljs-number">1e-5</span></span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.A = A</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.B = B</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.C = C</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.N = N</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.Q = Q</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.R = R</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.u_min = u_min</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.u_max = u_max</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.reg = reg  <span class="hljs-comment"># 正则化参数</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.measurement_history = []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.setpoint_history = []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">mpc_control</span>(<span class="hljs-params">self, x, r</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        x = x.reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        r = r.reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        n_states = self.A.shape[<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        n_controls = self.B.shape[<span class="hljs-number">1</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># 构建优化问题</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        H = np.zeros((self.N * n_controls, self.N * n_controls))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        F = np.zeros((self.N * n_controls, <span class="hljs-number">1</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(self.N):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            H[i * n_controls:(i + <span class="hljs-number">1</span>) * n_controls, i * n_controls:(i + <span class="hljs-number">1</span>) * n_controls] = self.R</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            F[i * n_controls:(i + <span class="hljs-number">1</span>) * n_controls, <span class="hljs-number">0</span>] = <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        G = np.zeros((self.N * n_states, self.N * n_controls))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        E = np.zeros((self.N * n_states, n_states))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        L = np.zeros((self.N * n_states, <span class="hljs-number">1</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(self.N):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i + <span class="hljs-number">1</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                G[i * n_states:(i + <span class="hljs-number">1</span>) * n_states, j * n_controls:(j + <span class="hljs-number">1</span>) * n_controls] \</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    = np.linalg.matrix_power(self.A,i - j) @ self.B</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            E[i * n_states:(i + <span class="hljs-number">1</span>) * n_states, :] = np.linalg.matrix_power(self.A, i + <span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            L[i * n_states:(i + <span class="hljs-number">1</span>) * n_states, :] = np.linalg.matrix_power(self.A, i + <span class="hljs-number">1</span>) @ x - r</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Q_bar = np.kron(np.eye(self.N), self.Q)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        H += G.T @ Q_bar @ G</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        F += (G.T @ Q_bar @ L).reshape(-<span class="hljs-number">1</span>, <span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># 计算最优控制输入</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        u_opt = -np.linalg.inv(H) @ F</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># 取第一个控制输入</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        u = u_opt[:n_controls]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> u</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">update</span>(<span class="hljs-params">self, setpoint, measurement</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.measurement_history.append(measurement)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.setpoint_history.append(setpoint)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        u = self.mpc_control(np.array(measurement), np.array(setpoint))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># print(u)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> u</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_error</span>(<span class="hljs-params">self, title=<span class="hljs-string">'none'</span></span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.setpoint_history = np.array(self.setpoint_history)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.measurement_history = np.array(self.measurement_history)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="65"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        subtitle = [<span class="hljs-string">'x'</span>, <span class="hljs-string">'y'</span>, <span class="hljs-string">'z'</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="66"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        fig = plt.figure(figsize=(<span class="hljs-number">14</span>, <span class="hljs-number">4</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="67"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(self.setpoint_history[<span class="hljs-number">0</span>])):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="68"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax = fig.add_subplot(<span class="hljs-number">131</span>+i)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="69"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax.plot([i / <span class="hljs-number">100</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(self.setpoint_history[:, i]))], self.setpoint_history[:, i],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="70"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    label=<span class="hljs-string">'setpoint'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="71"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax.plot([i / <span class="hljs-number">100</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(self.measurement_history[:, i]))], self.measurement_history[:, i],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="72"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    label=<span class="hljs-string">'measurement'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="73"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax.set_xlabel(<span class="hljs-string">'time'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="74"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax.set_ylabel(<span class="hljs-string">'value'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="75"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax.set_title(subtitle[i]+title)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="76"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ax.legend()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="77"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        plt.tight_layout()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="78"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="79"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="80"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    A = np.array([[<span class="hljs-number">1</span>, <span class="hljs-number">0</span>,<span class="hljs-number">0</span>], [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="81"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    B = np.array([[<span class="hljs-number">0.5</span>,<span class="hljs-number">0.6</span>,<span class="hljs-number">0.2</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">0.1</span>,<span class="hljs-number">0.4</span>],[<span class="hljs-number">0.5</span>,<span class="hljs-number">0.5</span>,<span class="hljs-number">0.8</span>]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="82"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    C = np.eye(<span class="hljs-number">3</span>)  <span class="hljs-comment"># 输出矩阵</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="83"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    Q = np.eye(<span class="hljs-number">3</span>)*<span class="hljs-number">2</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="84"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    R = np.eye(<span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="85"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    N = <span class="hljs-number">10</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="86"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    u_min = -<span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="87"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    u_max = <span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="88"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    reg = <span class="hljs-number">1e-5</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="89"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="90"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    outer_controller = MPCController(A, B, C, N, Q, R, u_min, u_max, reg)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="91"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    inner_controller = MPCController(A, B, C, N, Q, R, u_min, u_max, reg)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="92"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    setpoint = np.array([[<span class="hljs-number">1</span>], [<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="93"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-comment"># r = np.ones((1, N))  # 目标为1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="94"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    measurement = np.array([[<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="95"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    x = np.array([[<span class="hljs-number">0</span>], [<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="96"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    x_dot = np.array([[<span class="hljs-number">0</span>], [<span class="hljs-number">0</span>], [<span class="hljs-number">0</span>]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="97"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="98"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        u = outer_controller.update(setpoint, x)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="99"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        u_v = inner_controller.update(u,x_dot)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="100"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        x_dot = A @ x_dot + B @ u_v.reshape(-<span class="hljs-number">1</span>, <span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="101"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        x = A @ x + B @ x_dot.reshape(-<span class="hljs-number">1</span>, <span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="102"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># x = A @ x + B @ u.reshape(-1, 1)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="103"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        y = C @ x</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="104"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">"控制输入 u:"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="105"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-built_in">print</span>(u)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="106"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">'状态 x:'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="107"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-built_in">print</span>(x)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="108"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    inner_controller.plot_error()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="109"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    outer_controller.plot_error()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="110"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    plt.show()</div></div></li></ol></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreWhite.png" alt title></span></div><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:2,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:2,&quot;runIdx&quot;:-1}}"></button></pre> <p>仿真运行代码：</p> <pre data-index="3" class="set-code-hide" name="code"><code class="language-python hljs"><ol class="hljs-ln hundred" style="width:989px"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">from</span> init_control <span class="hljs-keyword">import</span> UAVParameters</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">from</span> uav_dynamics <span class="hljs-keyword">import</span> UAVDynamics</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">from</span> common_function <span class="hljs-keyword">import</span> rotation_matrix, angle_body2world</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">from</span> PIDController <span class="hljs-keyword">import</span> posion_pos_controller</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">from</span> LQRController <span class="hljs-keyword">import</span> LQRController</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">from</span> MPCController <span class="hljs-keyword">import</span> MPCController</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">from</span> square_signal <span class="hljs-keyword">import</span> generate_ramp_signal</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">class</span> <span class="hljs-title class_">UAVSimulation</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, params, dynamics, position_controller, pose_controller, controller_type</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.params = params</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.dynamics = dynamics</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.controller_type = controller_type</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> controller_type == <span class="hljs-string">"PID"</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.x_controller = position_controller[<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.y_controller = position_controller[<span class="hljs-number">1</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.height_controller = position_controller[<span class="hljs-number">2</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">else</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.position_controller = position_controller[<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.velocity_controller = position_controller[<span class="hljs-number">1</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.roll_controller = pose_controller[<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.pitch_controller = pose_controller[<span class="hljs-number">1</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.yaw_controller = pose_controller[<span class="hljs-number">2</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.position_history = []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.setpoint_history = []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">desired_euler_angles</span>(<span class="hljs-params">self, eax, eay, psi</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-string"><span class="hljs-string">"""</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        Convert the desired horizontal acceleration to the desired Euler angle</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        Input:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">          eax, eay: desired horizontal acceleration</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        Output:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">          phi, theta: desired roll and pitch</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        """</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        g = <span class="hljs-number">9.8</span>  <span class="hljs-comment"># 重力加速度 (m/s^2)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        phi = (-np.sin(psi) * eax + np.cos(psi) * eay) / g</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        theta = (-np.cos(psi) * eax - np.sin(psi) * eay) / g</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> phi, theta</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">motor_mixer</span>(<span class="hljs-params">self, roll, pitch, yaw, thrust</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-string"><span class="hljs-string">"""</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        Control allocation. The quadrotor type is X-configuration,</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        and the airframe is as follows:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        3↓   1↑</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">          \ /</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">          / \</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        2↑   4↓</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        Input:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">          roll, pitch, yaw: attitude controller output.</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">          thrust: total thrust.</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        Output:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">          M1, M2, M3, M4: motor speed commands.</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        """</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        idle_PWM = <span class="hljs-number">1000</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        scale = <span class="hljs-number">1000</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        M1 = (thrust - roll + pitch + yaw) * scale + idle_PWM</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        M2 = (thrust + roll - pitch + yaw) * scale + idle_PWM</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="65"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        M3 = (thrust + roll + pitch - yaw) * scale + idle_PWM</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="66"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        M4 = (thrust - roll - pitch - yaw) * scale + idle_PWM</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="67"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="68"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> M1, M2, M3, M4</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="69"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="70"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">pwm_to_rpm</span>(<span class="hljs-params">self, pwm</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="71"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-string"><span class="hljs-string">"""</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="72"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        Convert PWM signal to RPM. This is a simple linear approximation.</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="73"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        Input:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="74"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">          pwm: PWM signal value</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="75"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="76"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        Output:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="77"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">          rpm: motor speed in RPM</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="78"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        """</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="79"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        min_pwm = <span class="hljs-number">1000</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="80"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        max_pwm = <span class="hljs-number">2000</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="81"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="82"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># 限制PWM范围</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="83"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        pwm = np.clip(pwm, min_pwm, max_pwm)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="84"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="85"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># 线性插值计算RPM</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="86"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        rpm = np.clip((pwm - min_pwm) / (max_pwm - min_pwm), -<span class="hljs-number">1</span>, <span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="87"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> rpm</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="88"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="89"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">self, square_corners, duration, dt</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="90"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        DEG2RAD = self.params.DEG2RAD</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="91"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        posE = self.params.ModelInit_PosE.astype(np.float64)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="92"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        velB = self.params.ModelInit_VelB.astype(np.float64)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="93"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        velE = self.params.ModelInit_VelB.astype(np.float64)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="94"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        angEuler = self.params.ModelInit_AngEuler</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="95"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        rateB = self.params.ModelInit_RateB</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="96"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        rateE = self.params.ModelInit_RateB</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="97"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ModelParam_motorCr = self.params.ModelParam_motorCr</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="98"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ModelParam_motorWb = self.params.ModelParam_motorWb</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="99"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="100"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        state = [velB, angEuler, rateB]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="101"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        current_corner_index = <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="102"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        time_steps = <span class="hljs-built_in">int</span>(duration / dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="103"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        num_steps = time_steps // (<span class="hljs-built_in">len</span>(square_corners) - <span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="104"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># next_corner_time = time_steps  // (len(square_corners)-1)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="105"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        input_signal = generate_ramp_signal(square_corners, num_steps)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="106"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="107"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> step <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(time_steps):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="108"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            setpoint = input_signal[step]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="109"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            eax, eay, altitude_output = <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="110"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-built_in">print</span>(<span class="hljs-string">'setpoint:'</span>, setpoint)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="111"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> self.controller_type == <span class="hljs-string">'PID'</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="112"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                eax = self.x_controller.update(outer_setpoint=setpoint[<span class="hljs-number">0</span>], outer_measurement=posE[<span class="hljs-number">0</span>],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="113"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                               inner_measurement=velE[<span class="hljs-number">0</span>], dt=dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="114"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                eay = self.y_controller.update(outer_setpoint=setpoint[<span class="hljs-number">1</span>], outer_measurement=posE[<span class="hljs-number">1</span>],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="115"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                               inner_measurement=velE[<span class="hljs-number">1</span>], dt=dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="116"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                altitude_output = self.height_controller.update(outer_setpoint=setpoint[<span class="hljs-number">2</span>], outer_measurement=posE[<span class="hljs-number">2</span>],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="117"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                                                inner_measurement=velE[<span class="hljs-number">2</span>], dt=dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="118"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">else</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="119"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                vel_setpoint = self.position_controller.update(setpoint, posE)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="120"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-comment"># 速度环LQR控制</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="121"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                acc_setpoint = self.velocity_controller.update(vel_setpoint, velE)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="122"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-keyword">if</span> self.controller_type == <span class="hljs-string">"MPC"</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="123"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    eax, eay, altitude_output = acc_setpoint[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>], acc_setpoint[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>], acc_setpoint[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="124"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-keyword">elif</span> self.controller_type == <span class="hljs-string">"LQR"</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="125"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    eax, eay, altitude_output = acc_setpoint[<span class="hljs-number">0</span>], acc_setpoint[<span class="hljs-number">1</span>], acc_setpoint[<span class="hljs-number">2</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="126"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-keyword">else</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="127"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    <span class="hljs-built_in">print</span>(<span class="hljs-string">"unknown controller"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="128"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            phi, theta = self.desired_euler_angles(eax, eay, angEuler[<span class="hljs-number">2</span>])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="129"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            phi = np.clip(phi, -<span class="hljs-number">35</span> * DEG2RAD, <span class="hljs-number">35</span> * DEG2RAD)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="130"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            theta = np.clip(theta, -<span class="hljs-number">35</span> * DEG2RAD, <span class="hljs-number">35</span> * DEG2RAD)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="131"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-built_in">print</span>(<span class="hljs-string">'eax,eay:'</span>, eax, eay)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="132"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-built_in">print</span>(<span class="hljs-string">'phi,theta:'</span>, phi, theta)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="133"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            roll_output = np.clip(self.roll_controller.update(outer_setpoint=phi, outer_measurement=angEuler[<span class="hljs-number">0</span>],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="134"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                                              inner_measurement=rateE[<span class="hljs-number">0</span>], dt=dt), -<span class="hljs-number">1</span>, <span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="135"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            pitch_output = np.clip(self.pitch_controller.update(outer_setpoint=theta, outer_measurement=angEuler[<span class="hljs-number">1</span>],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="136"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                                                inner_measurement=rateE[<span class="hljs-number">1</span>], dt=dt), -<span class="hljs-number">1</span>, <span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="137"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            yaw_output = np.clip(self.yaw_controller.update(outer_setpoint=(step // num_steps) * <span class="hljs-number">0.5</span> * <span class="hljs-number">0.0174533</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="138"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                                            outer_measurement=angEuler[<span class="hljs-number">2</span>],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="139"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                                            inner_measurement=rateE[<span class="hljs-number">2</span>], dt=dt), -<span class="hljs-number">1</span>, <span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="140"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            thrust = np.clip(-altitude_output + self.params.THR_HOVER, <span class="hljs-number">0.05</span>, <span class="hljs-number">0.9</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="141"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-built_in">print</span>(<span class="hljs-string">'roll_output,pitch_output,yaw_output,altitude_output:'</span>, roll_output, pitch_output, yaw_output,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="142"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                  altitude_output)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="143"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            M1, M2, M3, M4 = self.motor_mixer(roll_output, pitch_output, yaw_output, thrust)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="144"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-built_in">print</span>(<span class="hljs-string">'M1,M2,M3,M4:'</span>, M1, M2, M3, M4)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="145"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="146"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            w_target = (np.array(</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="147"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                [self.pwm_to_rpm(M1), self.pwm_to_rpm(M2), self.pwm_to_rpm(M3),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="148"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                 self.pwm_to_rpm(M4)]) * ModelParam_motorCr +</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="149"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        np.array([ModelParam_motorWb, ModelParam_motorWb, ModelParam_motorWb, ModelParam_motorWb]))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="150"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-built_in">print</span>(<span class="hljs-string">'w_target:'</span>, w_target)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="151"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            state = self.dynamics.update_dynamics(state, w_target, dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="152"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            velB, angEuler, rateB = state</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="153"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment"># R = rotation_matrix(angEuler)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="154"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            R_angle = angle_body2world(angEuler)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="155"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            R = rotation_matrix(angEuler)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="156"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            rateE = R_angle @ rateB</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="157"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            angEuler = angEuler + rateE * dt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="158"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            velE = R @ velB</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="159"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            posE = posE + velE * dt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="160"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="161"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            state = velB, angEuler, rateB</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="162"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.position_history.append(posE.copy())</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="163"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-built_in">print</span>(</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="164"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-string">f"Time: <span class="hljs-subst">&#123;step * dt:<span class="hljs-number">.2</span>f&#125;</span>s, Position: <span class="hljs-subst">&#123;posE&#125;</span>, Velocity_world: <span class="hljs-subst">&#123;velE&#125;</span>, Angle: <span class="hljs-subst">&#123;angEuler&#125;</span>, Rate: <span class="hljs-subst">&#123;rateE&#125;</span>"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="165"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment"># if step % (next_corner_time-1) == 0 and step != 0:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="166"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">#     current_corner_index = (current_corner_index + 1) % len(square_corners)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="167"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.setpoint_history.append(setpoint.copy())</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="168"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="169"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_trajectory</span>(<span class="hljs-params">self</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="170"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        position_history = np.array(self.position_history)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="171"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        setpoint_history = np.array(self.setpoint_history)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="172"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        fig = plt.figure()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="173"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax = fig.add_subplot(<span class="hljs-number">121</span>, projection=<span class="hljs-string">'3d'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="174"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.plot(position_history[:, <span class="hljs-number">0</span>], position_history[:, <span class="hljs-number">1</span>], -position_history[:, <span class="hljs-number">2</span>], label=<span class="hljs-string">'UAV Trajectory'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="175"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.set_xlabel(<span class="hljs-string">'X Position (m)'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="176"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.set_ylabel(<span class="hljs-string">'Y Position (m)'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="177"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.set_zlabel(<span class="hljs-string">'Z Position (m)'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="178"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.set_title(<span class="hljs-string">'Trajectory of UAV '</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="179"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.legend()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="180"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="181"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax = fig.add_subplot(<span class="hljs-number">122</span>, projection=<span class="hljs-string">'3d'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="182"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.plot(setpoint_history[:, <span class="hljs-number">0</span>], setpoint_history[:, <span class="hljs-number">1</span>], -setpoint_history[:, <span class="hljs-number">2</span>], label=<span class="hljs-string">'setpoint Trajectory'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="183"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.set_xlabel(<span class="hljs-string">'X Position (m)'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="184"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.set_ylabel(<span class="hljs-string">'Y Position (m)'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="185"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.set_zlabel(<span class="hljs-string">'Z Position (m)'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="186"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.set_title(<span class="hljs-string">' Desired Trajectory '</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="187"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ax.legend()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="188"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="189"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_state_error</span>(<span class="hljs-params">self</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="190"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> self.controller_type == <span class="hljs-string">'PID'</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="191"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            fig_position = plt.figure(figsize=(<span class="hljs-number">14</span>, <span class="hljs-number">4</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="192"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.x_controller.outer_controller.plot_error(fig_position, <span class="hljs-number">0</span>, title=<span class="hljs-string">'x_position'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="193"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.y_controller.outer_controller.plot_error(fig_position, <span class="hljs-number">1</span>, title=<span class="hljs-string">'y_position'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="194"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.height_controller.outer_controller.plot_error(fig_position, <span class="hljs-number">2</span>, title=<span class="hljs-string">'height_position'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="195"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            fig_velocity = plt.figure(figsize=(<span class="hljs-number">14</span>, <span class="hljs-number">4</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="196"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.x_controller.inner_controller.plot_error(fig_velocity, <span class="hljs-number">0</span>, title=<span class="hljs-string">'x_velocity'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="197"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.y_controller.inner_controller.plot_error(fig_velocity, <span class="hljs-number">1</span>, title=<span class="hljs-string">'y_velocity'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="198"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.height_controller.inner_controller.plot_error(fig_velocity, <span class="hljs-number">2</span>, title=<span class="hljs-string">'height_velocity'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="199"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">else</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="200"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.position_controller.plot_error(<span class="hljs-string">'_position'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="201"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            self.velocity_controller.plot_error(<span class="hljs-string">'_velocity'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="202"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="203"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        fig_angle = plt.figure(figsize=(<span class="hljs-number">14</span>, <span class="hljs-number">4</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="204"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="205"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.roll_controller.outer_controller.plot_error(fig_angle, <span class="hljs-number">0</span>, title=<span class="hljs-string">'roll_angle'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="206"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.pitch_controller.outer_controller.plot_error(fig_angle, <span class="hljs-number">1</span>, title=<span class="hljs-string">'pitch_angle'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="207"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.yaw_controller.outer_controller.plot_error(fig_angle, <span class="hljs-number">2</span>, title=<span class="hljs-string">'yaw_angle'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="208"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        plt.tight_layout()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="209"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        fig_rate = plt.figure(figsize=(<span class="hljs-number">14</span>, <span class="hljs-number">4</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="210"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="211"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.roll_controller.inner_controller.plot_error(fig_rate, <span class="hljs-number">0</span>, title=<span class="hljs-string">'roll_rate'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="212"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.pitch_controller.inner_controller.plot_error(fig_rate, <span class="hljs-number">1</span>, title=<span class="hljs-string">'pitch_rate'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="213"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.yaw_controller.inner_controller.plot_error(fig_rate, <span class="hljs-number">2</span>, title=<span class="hljs-string">'yaw_rate'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="214"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        plt.tight_layout()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="215"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># plt.show()</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="216"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="217"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="218"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="219"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    params = UAVParameters()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="220"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    dynamics = UAVDynamics(params)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="221"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-comment"># controller = CascadePIDController(PIDController(3.0, 0.0, 0.15), PIDController(0.15, 0.0, 0.03))</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="222"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-comment"># controller_type = "PID"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="223"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-comment"># controller_type = "MPC"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="224"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    controller_type = <span class="hljs-string">"LQR"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="225"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    position_controller = <span class="hljs-literal">None</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="226"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">if</span> controller_type == <span class="hljs-string">'PID'</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="227"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        position_controller = posion_pos_controller(params).position_controller()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="228"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">elif</span> controller_type == <span class="hljs-string">'LQR'</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="229"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># 定义位置环的状态空间模型</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="230"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        A_pos = np.zeros((<span class="hljs-number">3</span>, <span class="hljs-number">3</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="231"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        B_pos = np.eye(<span class="hljs-number">3</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="232"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="233"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Q_pos = np.eye(<span class="hljs-number">3</span>) * <span class="hljs-number">1.65</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="234"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        R_pos = np.eye(<span class="hljs-number">3</span>) * <span class="hljs-number">4.0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="235"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="236"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># 定义速度环的状态空间模型</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="237"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        A_vel = np.zeros((<span class="hljs-number">3</span>, <span class="hljs-number">3</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="238"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        B_vel = np.eye(<span class="hljs-number">3</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="239"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="240"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Q_vel = np.eye(<span class="hljs-number">3</span>) * <span class="hljs-number">10.0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="241"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        R_vel = np.eye(<span class="hljs-number">3</span>) * <span class="hljs-number">2.4</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="242"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        pos_controller = LQRController(A_pos, B_pos, Q_pos, R_pos)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="243"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        vel_controller = LQRController(A_vel, B_vel, Q_vel, R_vel)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="244"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        position_controller = [pos_controller, vel_controller]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="245"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">elif</span> controller_type == <span class="hljs-string">'MPC'</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="246"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># 定义离散位置环的状态空间模型</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="247"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        A_pos = np.eye(<span class="hljs-number">3</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="248"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        B_pos = np.eye(<span class="hljs-number">3</span>) * <span class="hljs-number">0.01</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="249"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="250"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Q_pos = np.eye(<span class="hljs-number">3</span>) * <span class="hljs-number">3.95</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="251"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        R_pos = np.eye(<span class="hljs-number">3</span>) * <span class="hljs-number">0.6</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="252"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="253"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># 定义离散速度环的状态空间模型</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="254"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># A_vel = np.zeros((3, 3))</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="255"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        A_vel = np.eye(<span class="hljs-number">3</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="256"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        B_vel = np.eye(<span class="hljs-number">3</span>) * <span class="hljs-number">0.01</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="257"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="258"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Q_vel = np.eye(<span class="hljs-number">3</span>) * <span class="hljs-number">12.0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="259"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        R_vel = np.eye(<span class="hljs-number">3</span>) * <span class="hljs-number">0.6</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="260"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        pos_controller = MPCController(A_pos, B_pos, <span class="hljs-literal">None</span>, <span class="hljs-number">10</span>, Q_pos, R_pos, -<span class="hljs-number">3</span>, <span class="hljs-number">3</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="261"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        vel_controller = MPCController(A_vel, B_vel, <span class="hljs-literal">None</span>, <span class="hljs-number">10</span>, Q_vel, R_vel, -<span class="hljs-number">1</span>, <span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="262"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        position_controller = [pos_controller, vel_controller]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="263"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">else</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="264"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">'ERROR:Unknown Controller'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="265"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="266"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    pose_controller = posion_pos_controller(params).pos_controller()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="267"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    target_altitude = -<span class="hljs-number">5</span>  <span class="hljs-comment"># 目标高度</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="268"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    square_corners = [</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="269"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="270"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, target_altitude],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="271"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        [<span class="hljs-number">5</span>, <span class="hljs-number">0</span>, target_altitude],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="272"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        [<span class="hljs-number">5</span>, <span class="hljs-number">5</span>, target_altitude],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="273"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        [<span class="hljs-number">0</span>, <span class="hljs-number">5</span>, target_altitude],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="274"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, target_altitude],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="275"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="276"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="277"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    ]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="278"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    simulation = UAVSimulation(params, dynamics, position_controller=position_controller,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="279"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                               pose_controller=pose_controller, controller_type=controller_type)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="280"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    simulation.run(square_corners, <span class="hljs-number">35</span>, <span class="hljs-number">0.01</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="281"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    simulation.plot_trajectory()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="282"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    simulation.plot_state_error()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="283"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    plt.show()</div></div></li></ol></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreWhite.png" alt title></span></div><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:3,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:3,&quot;runIdx&quot;:-1}}"></button></pre> <p>三种控制算法效果如下：</p> <p><img alt height="900" src="https://i-blog.csdnimg.cn/direct/fd50de6a21bc4b6cbdf4b0a0da540475.png" width="1200"></p> <p><img alt height="900" src="https://i-blog.csdnimg.cn/direct/5f47e1b880054bf0ad82cb4a2054149a.png" width="1200"></p> <p><img alt height="900" src="https://i-blog.csdnimg.cn/direct/19fba9a0ba7546d382c4ddccb3c18995.png" width="1200"></p> <p>可能由于任务较为简单，三种算法差异不大，同时LQR和MPC计算效率较低。</p>                </div><div data-report-view="{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;spm&quot;:&quot;1001.2101.3001.6548&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/perfectdisaster/article/details/143432386&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}"><div></div></div>        ]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>四旋翼无人机动力学与控制(1)-动力学模型</title>
      <link href="/2024/11/01/quad01/"/>
      <url>/2024/11/01/quad01/</url>
      
        <content type="html"><![CDATA[<div id="content_views" class="htmledit_views"><p>笔者近来开始接触<a href="https://so.csdn.net/so/search?q=%E5%9B%9B%E6%97%8B%E7%BF%BC%E6%97%A0%E4%BA%BA%E6%9C%BA&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=%E5%9B%9B%E6%97%8B%E7%BF%BC%E6%97%A0%E4%BA%BA%E6%9C%BA&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;四旋翼无人机\&quot;}&quot;}" data-tit="四旋翼无人机" data-pretit="四旋翼无人机">四旋翼无人机</a>，学习过程中写了一份有关无人机动力学与控制的python代码，在此做一些记录和原理解释。</p> <p>附上仓库地址：<a href="https://gitee.com/gyxGYX123/UAV_Guo" rel="nofollow" title="四旋翼无人机仿真建模: 本仓库实现了四旋翼无人机的动力学仿真建模，并在此基础上完成了控制器的设计，包括串级PID、LQR、MPC等，实现了位置跟踪和路径规划。">四旋翼无人机仿真建模: 本仓库实现了四旋翼无人机的动力学仿真建模，并在此基础上完成了控制器的设计，包括串级PID、LQR、MPC等，实现了位置跟踪和路径规划。</a></p> <p>总体框架与思路如图所示，四旋翼无人机的运动<span class="words-blog hl-git-1" data-tit="模型" data-pretit="模型">模型</span>可以简单的看作是十二个状态变量(位置、速度、角度、角速度各三个变量）随运动而发生改变的过程，运动学方程如下图右半部分所示。</p> <p><img alt height="900" src="/.gd//source/_posts/quad01/kuangjia.png" width="1200"></p> <p>从框架讲起，作为一名飞行器控制专业的学生，四旋翼无人机在我眼中并不算是严格意义上的飞行器，我对其的理解更偏向于robotic，与固定翼相比，四旋翼的动力学模型更简单，我浅显的理解为依靠四个轴上的电机带动螺旋桨提供升力，通过调节电机转速制造升力差引起角度的偏转进而带动<a href="https://so.csdn.net/so/search?q=%E6%97%A0%E4%BA%BA%E6%9C%BA&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=%E6%97%A0%E4%BA%BA%E6%9C%BA&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;无人机\&quot;}&quot;}" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=%E6%97%A0%E4%BA%BA%E6%9C%BA&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;无人机\&quot;}&quot;}" data-tit="无人机" data-pretit="无人机">无人机</a>运动，因此就引出了四旋翼无人机常见的分级控制策略，分为角速度、姿态、速度和位置由内到外的四个环，详细内容将在下一篇文章展开。</p> <p><img alt height="900" src="/.gd//source/_posts/quad01/dongli.png" width="1200"></p> <p>笔者构建的动力学模型分为上图的几个部分，无人机构型为x型，定义电机顺序如上图左上所示，电机作为执行器，近似看作一个一阶延迟环节，控制<span class="edu-hl hl hl-1" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;word\&quot;:\&quot;分配器\&quot;}&quot;}" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;word\&quot;:\&quot;分配器\&quot;}&quot;}" data-tit="分配器" data-pretit="分配器">分配器</span>由升力和力矩在四轴上的分解和合成计算得出。</p> <p>选取四阶龙格库塔法进行状态更新，由此可以开始编写程序了：</p> <p>common_function：</p> <pre data-index="0" class="set-code-hide" name="code"><code class="language-python hljs"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Author：gyx</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Usage: common function</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Last change: 2024-7-20</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">def</span> <span class="hljs-title function_">dcm_from_euler</span>(<span class="hljs-params">euler_angles</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-string"><span class="hljs-string">"""</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    计算方向余弦矩阵（DCM）(Earth2Body）</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    :param roll: 滚转角，单位为弧度</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    :param pitch: 俯仰角，单位为弧度</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    :param yaw: 偏航角，单位为弧度</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    :return: 方向余弦矩阵（DCM）</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    """</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    roll, pitch, yaw = euler_angles</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    c_roll = np.cos(roll)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    s_roll = np.sin(roll)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    c_pitch = np.cos(pitch)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    s_pitch = np.sin(pitch)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    c_yaw = np.cos(yaw)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    s_yaw = np.sin(yaw)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-comment"># 构建方向余弦矩阵</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    dcm = np.array([</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        [c_yaw * c_pitch, c_yaw * s_pitch * s_roll - s_yaw * c_roll, c_yaw * s_pitch * c_roll + s_yaw * s_roll],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        [s_yaw * c_pitch, s_yaw * s_pitch * s_roll + c_yaw * c_roll, s_yaw * s_pitch * c_roll - c_yaw * s_roll],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        [-s_pitch, c_pitch * s_roll, c_pitch * c_roll]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    ])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">return</span> dcm</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">def</span> <span class="hljs-title function_">rotation_matrix</span>(<span class="hljs-params">euler_angles</span>):  <span class="hljs-comment"># （Body2Earth)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    phi, theta, psi = euler_angles</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    R_x = np.array([[<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    [<span class="hljs-number">0</span>, np.cos(phi), -np.sin(phi)],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    [<span class="hljs-number">0</span>, np.sin(phi), np.cos(phi)]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    R_y = np.array([[np.cos(theta), <span class="hljs-number">0</span>, np.sin(theta)],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    [-np.sin(theta), <span class="hljs-number">0</span>, np.cos(theta)]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    R_z = np.array([[np.cos(psi), -np.sin(psi), <span class="hljs-number">0</span>],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    [np.sin(psi), np.cos(psi), <span class="hljs-number">0</span>],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">return</span> R_z @ R_y @ R_x</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">def</span> <span class="hljs-title function_">angle_body2world</span>(<span class="hljs-params">euler_angles</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    phi, theta, psi = euler_angles</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    Trans_matrix = np.array([[<span class="hljs-number">1</span>, np.tan(theta) * np.sin(phi), np.tan(theta) * np.cos(phi)],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                             [<span class="hljs-number">0</span>, np.cos(phi), -np.sin(phi)],</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                             [<span class="hljs-number">0</span>, np.sin(phi) / np.cos(theta), np.cos(phi) / np.cos(theta)]])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">return</span> Trans_matrix</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">def</span> <span class="hljs-title function_">rk4_step</span>(<span class="hljs-params">f, state, u, t, dt</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    k1 = f(state, u, t)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-built_in">print</span>([x * <span class="hljs-number">0.5</span> * dt <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> k1])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    k2 = f(state + [x * <span class="hljs-number">0.5</span> * dt <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> k1], u, t + <span class="hljs-number">0.5</span> * dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    k3 = f(state + [x * <span class="hljs-number">0.5</span> * dt <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> k2], u, t + <span class="hljs-number">0.5</span> * dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    k4 = f(state + [x  * dt <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> k3], u, t + dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="65"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">return</span> state + (dt / <span class="hljs-number">6</span>) * (k1 + <span class="hljs-number">2</span> * k2 + <span class="hljs-number">2</span> * k3 + k4)</div></div></li></ol></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreWhite.png" alt title></span></div><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:0,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:0,&quot;runIdx&quot;:-1}}"></button></pre> <p>dynamic：</p> <pre data-index="1" class="set-code-hide" name="code"><code class="language-python hljs"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Author：gyx</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Usage: build uav dynamics model</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment"># Last change: 2024-7-20</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">from</span> common_function <span class="hljs-keyword">import</span> dcm_from_euler, rotation_matrix</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">class</span> <span class="hljs-title class_">UAVDynamics</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, params</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.params = params</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.w_current = params.ModelInit_Rads</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_angular_velocity_derivative</span>(<span class="hljs-params">self, M, J, omega</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> np.linalg.inv(J) @ (M - np.cross(omega, J @ omega))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_linear_velocity_derivative</span>(<span class="hljs-params">self, F, m</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> np.clip(F / m, -<span class="hljs-number">0.4</span>, <span class="hljs-number">0.4</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">Obtain_force_torque</span>(<span class="hljs-params">self, w, R, Cm, Ct, Vb, Cd, wb, Cdm, Jrp</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        M_rctcm = np.array([</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            [-np.sin(np.pi / <span class="hljs-number">4</span>) * R * Ct, np.sin(np.pi / <span class="hljs-number">4</span>) * R * Ct, np.sin(np.pi / <span class="hljs-number">4</span>) * R * Ct,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">             -np.sin(np.pi / <span class="hljs-number">4</span>) * R * Ct],  <span class="hljs-comment"># Roll torque</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            [np.sin(np.pi / <span class="hljs-number">4</span>) * R * Ct, -np.sin(np.pi / <span class="hljs-number">4</span>) * R * Ct, np.sin(np.pi / <span class="hljs-number">4</span>) * R * Ct,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">             -np.sin(np.pi / <span class="hljs-number">4</span>) * R * Ct],  <span class="hljs-comment"># Pitch torque</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            [Cm, Cm, -Cm, -Cm]  <span class="hljs-comment"># Yaw torque</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Mp = np.dot(M_rctcm, w ** <span class="hljs-number">2</span>)  <span class="hljs-comment"># Torque</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Fp = np.array([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, -np.<span class="hljs-built_in">sum</span>(Ct * (w ** <span class="hljs-number">2</span>))])  <span class="hljs-comment"># Thrust</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Fd = -Cd * Vb * np.<span class="hljs-built_in">abs</span>(Vb) * <span class="hljs-number">0.5</span>  <span class="hljs-comment"># Aerodynamic force</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Md = -Cdm * wb * np.<span class="hljs-built_in">abs</span>(wb)  <span class="hljs-comment"># Aerodynamic moment</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># Gyro moment</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Ga = np.zeros(<span class="hljs-number">3</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Ga[<span class="hljs-number">0</span>] = Jrp * wb[<span class="hljs-number">1</span>] * (w[<span class="hljs-number">0</span>] + w[<span class="hljs-number">1</span>] - w[<span class="hljs-number">2</span>] - w[<span class="hljs-number">3</span>])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Ga[<span class="hljs-number">1</span>] = Jrp * wb[<span class="hljs-number">0</span>] * (-w[<span class="hljs-number">0</span>] - w[<span class="hljs-number">1</span>] + w[<span class="hljs-number">2</span>] + w[<span class="hljs-number">3</span>])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> Fp, Fd, Mp, Md, Ga</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">motor_dynamics</span>(<span class="hljs-params">self, w_current, w_target, T, dt</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        dw = (w_target - w_current) / T</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> w_current + dw * dt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">state_derivative</span>(<span class="hljs-params">self, state, w_target,dt</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        velB, angEuler, rateB = state</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        m = self.params.ModelParam_uavMass</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        J = self.params.ModelParam_uavJ</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        g = self.params.ModelParam_envGravityAcc</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        uavType = self.params.ModelParam_uavType</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        R = self.params.ModelParam_uavR</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Cm = self.params.ModelParam_rotorCm</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Ct = self.params.ModelParam_rotorCt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Cd = self.params.ModelParam_uavCd</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Cdm = self.params.ModelParam_uavCCm</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Jrp = self.params.ModelParam_motorJm</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        T = self.params.ModelParam_motorT</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        self.w_current = self.motor_dynamics(self.w_current, w_target, T, dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        Fp, Fd, Mp, Md, Ga = self.Obtain_force_torque(self.w_current, R, Cm, Ct, velB, Cd, rateB, Cdm, Jrp)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        dcm = dcm_from_euler(angEuler)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        total_force = Fp + Fd + np.array([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, m * g]).dot(dcm)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="65"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        total_torque = Mp + Md + Ga</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="66"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        velB_dot = self.get_linear_velocity_derivative(total_force, m)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="67"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        rateB_dot = self.get_angular_velocity_derivative(total_torque, J, rateB)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="68"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="69"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> velB_dot, rateB_dot</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="70"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="71"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">update_dynamics</span>(<span class="hljs-params">self, state, w_target, dt</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="72"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        velB, angEuler, rateB = state</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="73"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="74"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"># Runge-Kutta 4th Order Method</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="75"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        k1_velB_dot, k1_rateB_dot = self.state_derivative(state, w_target,dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="76"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        k2_velB_dot, k2_rateB_dot = self.state_derivative(</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="77"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            (velB + <span class="hljs-number">0.5</span> * k1_velB_dot * dt, angEuler, rateB + <span class="hljs-number">0.5</span> * k1_rateB_dot * dt), w_target,dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="78"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        k3_velB_dot, k3_rateB_dot = self.state_derivative(</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="79"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            (velB + <span class="hljs-number">0.5</span> * k2_velB_dot * dt, angEuler, rateB + <span class="hljs-number">0.5</span> * k2_rateB_dot * dt), w_target,dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="80"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        k4_velB_dot, k4_rateB_dot = self.state_derivative(</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="81"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            (velB + k3_velB_dot * dt, angEuler, rateB + k3_rateB_dot * dt), w_target,dt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="82"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="83"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        velB = velB + (k1_velB_dot + <span class="hljs-number">2</span> * k2_velB_dot + <span class="hljs-number">2</span> * k3_velB_dot + k4_velB_dot) * dt / <span class="hljs-number">6</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="84"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        rateB = rateB + (k1_rateB_dot + <span class="hljs-number">2</span> * k2_rateB_dot + <span class="hljs-number">2</span> * k3_rateB_dot + k4_rateB_dot) * dt / <span class="hljs-number">6</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="85"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="86"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> velB, angEuler, rateB</div></div></li></ol></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreWhite.png" alt title></span></div><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:1,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:1,&quot;runIdx&quot;:-1}}"></button></pre> <p></p>                </div><div data-report-view="{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;spm&quot;:&quot;1001.2101.3001.6548&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/perfectdisaster/article/details/143431038&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}"><div></div></div>        ]]></content>
      
      
      
        <tags>
            
            <tag> 四旋翼无人机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolo训练自己的数据集</title>
      <link href="/2024/07/08/yolo/"/>
      <url>/2024/07/08/yolo/</url>
      
        <content type="html"><![CDATA[<h3 id="这是笔者大一时加入西北工业大学舞蹈机器人基地的最后一轮考核任务，意义非凡，留作纪念。"><a href="#这是笔者大一时加入西北工业大学舞蹈机器人基地的最后一轮考核任务，意义非凡，留作纪念。" class="headerlink" title="这是笔者大一时加入西北工业大学舞蹈机器人基地的最后一轮考核任务，意义非凡，留作纪念。"></a>这是笔者大一时加入西北工业大学舞蹈机器人基地的最后一轮考核任务，意义非凡，留作纪念。</h3><div id="content_views" class="htmledit_views">    <p>最近在学<a href="https://so.csdn.net/so/search?q=%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;图像识别\&quot;}&quot;}" data-tit="图像识别" data-pretit="图像识别">图像识别</a>，跑了几遍yolov3，在此做一些记录</p> <p>我的环境如下：</p> <pre data-index="0" class="set-code-show" name="code"><code class="hljs language-vbnet"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-symbol">ubuntu:</span> <span class="hljs-number">18.04</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-symbol">GPU:</span> RTX3050ti</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-symbol">cuda:</span> <span class="hljs-number">11.4</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-symbol">cudnn:</span> <span class="hljs-number">8.4</span>.<span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-symbol">opencv:</span> <span class="hljs-number">4.2</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-symbol">python:</span> <span class="hljs-number">3.6</span>.<span class="hljs-number">9</span></div></div></li></ol></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:0,&quot;runIdx&quot;:-1}}" button></button></pre> <p>首先是框架的安装，我选择的是AB大神的<a href="https://so.csdn.net/so/search?q=darknet&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=darknet&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;darknet\&quot;}&quot;}" data-tit="darknet" data-pretit="darknet">darknet</a>框架，下载过程如下：</p> <pre data-index="1" class="set-code-show" name="code"><code class="hljs language-bash"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">git <span class="hljs-built_in">clone</span> https://github.com/AlexeyAB/darknet.git</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-built_in">cd</span> darknet</div></div></li></ol></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:1,&quot;runIdx&quot;:-1}}"></button></pre> <p>修改一下makefile文件</p> <pre data-index="2" class="set-code-show" name="code"><code class="hljs language-cobol"><ol class="hljs-ln" style="width:990px"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">GPU<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-operator">/</span><span class="hljs-operator">/</span>GPU<span class="hljs-operator">=</span><span class="hljs-number">1</span>表示启用GPU</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">CUDNN<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-operator">/</span><span class="hljs-operator">/</span>CUDNN<span class="hljs-operator">=</span><span class="hljs-number">1</span>表示启用cudnn</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">CUDNN_HALF<span class="hljs-operator">=</span><span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">OPENCV<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-operator">/</span><span class="hljs-operator">/</span>opencv<span class="hljs-operator">=</span><span class="hljs-number">1</span>表示启用opencv，如果需要调用摄像头需启用</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">AVX<span class="hljs-operator">=</span><span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">OPENMP<span class="hljs-operator">=</span><span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">LIBSO<span class="hljs-operator">=</span><span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">ZED_CAMERA<span class="hljs-operator">=</span><span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">ZED_CAMERA_v<span class="hljs-number">2</span>_<span class="hljs-number">8</span><span class="hljs-operator">=</span><span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># <span class="hljs-keyword">set</span> GPU<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> CUDNN<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">to</span> speedup <span class="hljs-keyword">on</span> GPU</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># <span class="hljs-keyword">set</span> CUDNN_HALF<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">to</span> further speedup <span class="hljs-number">3</span> x <span class="hljs-keyword">times</span> (Mixed-precision <span class="hljs-keyword">on</span> Tensor Cores) GPU: Volta, Xavier, Turing <span class="hljs-keyword">and</span> higher</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># <span class="hljs-keyword">set</span> AVX<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> OPENMP<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">to</span> speedup <span class="hljs-keyword">on</span> CPU (<span class="hljs-keyword">if</span> <span class="hljs-keyword">error</span> <span class="hljs-keyword">occurs</span> <span class="hljs-keyword">then</span> <span class="hljs-keyword">set</span> AVX<span class="hljs-operator">=</span><span class="hljs-number">0</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># <span class="hljs-keyword">set</span> ZED_CAMERA<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">to</span> enable ZED SDK <span class="hljs-number">3.0</span> <span class="hljs-keyword">and</span> above</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># <span class="hljs-keyword">set</span> ZED_CAMERA_v<span class="hljs-number">2</span>_<span class="hljs-number">8</span><span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">to</span> enable ZED SDK <span class="hljs-number">2</span>.X</div></div></li></ol></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:2,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:2,&quot;runIdx&quot;:-1}}"></button></pre> <p>我的建议是一定要用<span class="words-blog hl-git-1" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.10283&quot;,&quot;extra&quot;:&quot;{\&quot;words\&quot;:\&quot;cuda\&quot;}&quot;}" data-tit="cuda" data-pretit="cuda">cuda</span>，纯CPU跑的特别慢，可以考虑云GPU</p> <p>编译：</p> <pre data-index="3" class="set-code-show" name="code"><code class="hljs language-go"><span class="hljs-built_in">make</span></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:3,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:3,&quot;runIdx&quot;:-1}}"></button></pre> <p>下载<a href="https://so.csdn.net/so/search?q=yolov3&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=yolov3&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;yolov3\&quot;}&quot;}" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=yolov3&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;yolov3\&quot;}&quot;}" data-tit="yolov3" data-pretit="yolov3">yolov3</a>预训练<span class="edu-hl hl hl-1" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;word\&quot;:\&quot;模型\&quot;}&quot;}" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;word\&quot;:\&quot;模型\&quot;}&quot;}" data-tit="模型" data-pretit="模型">模型</span>：（如果下载的很慢的话可以从博主的<a class="link-info" href="https://blog.csdn.net/perfectdisaster/article/details/125680591?spm=1001.2014.3001.5502" title="这篇博客">这篇博客</a>下载）</p> <pre data-index="4" class="set-code-show" name="code"><code class="hljs language-cobol">wget https:<span class="hljs-operator">/</span><span class="hljs-operator">/</span>pjreddie.com<span class="hljs-operator">/</span>media<span class="hljs-operator">/</span>files<span class="hljs-operator">/</span>yolov<span class="hljs-number">3</span>.weights</code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:4,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:4,&quot;runIdx&quot;:-1}}"></button></pre> <p>测试一下是否安装好了：</p> <pre data-index="5" class="set-code-show" name="code"><code class="hljs language-cobol"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">.<span class="hljs-operator">/</span>darknet detect cfg<span class="hljs-operator">/</span>yolov<span class="hljs-number">3</span>.cfg yolov<span class="hljs-number">3</span>.weights <span class="hljs-keyword">data</span><span class="hljs-operator">/</span>dog.jpg</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">或者</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">.<span class="hljs-operator">/</span>darknet detector <span class="hljs-keyword">test</span> cfg<span class="hljs-operator">/</span>coco.<span class="hljs-keyword">data</span> cfg<span class="hljs-operator">/</span>yolov<span class="hljs-number">3</span>.cfg yolov<span class="hljs-number">3</span>.weights <span class="hljs-keyword">data</span><span class="hljs-operator">/</span>dog.jpg</div></div></li></ol></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:5,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:5,&quot;runIdx&quot;:-1}}"></button></pre> <p>运行结果如下时，恭喜你安装成功了<img alt src="https://i-blog.csdnimg.cn/blog_migrate/1db97a222c47f58392f7d2489460e707.png"></p> <p>接下来就可以着手训练自己的数据集了</p> <p><strong>一.训练数据集的第一步首先是标注图像，我这里选用的是labelImg,<a class="link-info" href="https://tzutalin.github.io/labelImg/" rel="nofollow" title="下载地址">下载地址</a>，安装成功后终端输入：(建议使用conda虚拟环境）</strong></p> <pre data-index="6" class="set-code-show" name="code"><code class="hljs language-undefined">labelImg</code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:6,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:6,&quot;runIdx&quot;:-1}}"></button></pre> <p>打开标注界面如下：<img alt src="https://i-blog.csdnimg.cn/blog_migrate/b591e4add336bbd9e62c60786b0bb536.png"></p> <p>yolo使用的文本格式是txt文件，但你也可以标注为xml文件，之后再进行转换即可</p> <p><strong>二</strong>.<strong>接下来在darknet目录下创建myData文件夹，目录结构如下，将之前标注好的图片和xml文件放到对应目录下</strong></p> <pre data-index="7" class="set-code-show" name="code"><code class="hljs language-csharp"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">myData</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  ...JPEGImages<span class="hljs-meta">#存放图像</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  ...ImageSets/Main <span class="hljs-meta">#(如果标注的是xml文件的话需创建，txt文件不需要）</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  ...Annotations<span class="hljs-meta">#存放图像对应的xml文件（如果标注的是xml文件的话）</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  ...labels <span class="hljs-meta">#存放图像对应的txt文件</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  ...backup <span class="hljs-meta">#存放训练所得的权重文件</span></div></div></li></ol></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:7,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:7,&quot;runIdx&quot;:-1}}"></button></pre> <p><strong>三.数据集的配置</strong></p> <p>&nbsp;&nbsp;&nbsp;&nbsp; 1.如果标注的是xml文件，新建my_labels.py文件，复制以下内容：这里<a class="link-info" href="https://blog.csdn.net/yishuihanq/article/details/122778265" title="参考">参考</a></p> <pre data-index="8" class="set-code-hide" name="code"><code class="hljs language-cobol"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import os</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import <span class="hljs-keyword">random</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">trainval_percent <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">train_percent <span class="hljs-operator">=</span> <span class="hljs-number">0.9</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#xmlfilepath <span class="hljs-operator">=</span> <span class="hljs-string">'Annotations'</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filepath <span class="hljs-operator">=</span> <span class="hljs-string">'labels'</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">txtsavepath <span class="hljs-operator">=</span> <span class="hljs-string">'ImageSets\Main'</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#total_xml <span class="hljs-operator">=</span> os.listdir(xmlfilepath)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">total <span class="hljs-operator">=</span> os.listdir(filepath)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#num <span class="hljs-operator">=</span> len(total_xml)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">num <span class="hljs-operator">=</span> len(total)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">list <span class="hljs-operator">=</span> range(num)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">tv <span class="hljs-operator">=</span> int(num <span class="hljs-operator">*</span> trainval_percent)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">tr <span class="hljs-operator">=</span> int(tv <span class="hljs-operator">*</span> train_percent)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">trainval <span class="hljs-operator">=</span> <span class="hljs-keyword">random</span>.sample(list, tv)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">train <span class="hljs-operator">=</span> <span class="hljs-keyword">random</span>.sample(trainval, tr)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">ftrainval <span class="hljs-operator">=</span> <span class="hljs-keyword">open</span>(<span class="hljs-string">'ImageSets/Main/trainval.txt'</span>, <span class="hljs-string">'w'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">ftest <span class="hljs-operator">=</span> <span class="hljs-keyword">open</span>(<span class="hljs-string">'ImageSets/Main/test.txt'</span>, <span class="hljs-string">'w'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">ftrain <span class="hljs-operator">=</span> <span class="hljs-keyword">open</span>(<span class="hljs-string">'ImageSets/Main/train.txt'</span>, <span class="hljs-string">'w'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">fval <span class="hljs-operator">=</span> <span class="hljs-keyword">open</span>(<span class="hljs-string">'ImageSets/Main/val.txt'</span>, <span class="hljs-string">'w'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> list:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #name <span class="hljs-operator">=</span> total_xml[i][:-<span class="hljs-number">4</span>] <span class="hljs-operator">+</span> <span class="hljs-string">'\n'</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    name <span class="hljs-operator">=</span> total[i][:-<span class="hljs-number">4</span>] <span class="hljs-operator">+</span> <span class="hljs-string">'\n'</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> trainval:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ftrainval.<span class="hljs-keyword">write</span>(name)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> train:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ftest.<span class="hljs-keyword">write</span>(name)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">else</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            fval.<span class="hljs-keyword">write</span>(name)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">else</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        ftrain.<span class="hljs-keyword">write</span>(name)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">ftrainval.<span class="hljs-keyword">close</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">ftrain.<span class="hljs-keyword">close</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">fval.<span class="hljs-keyword">close</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">ftest.<span class="hljs-keyword">close</span>()</div></div></li></ol></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreWhite.png" alt title></span></div><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:8,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:8,&quot;runIdx&quot;:-1}}"></button></pre> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; 运行：</p> <pre data-index="9" class="set-code-show" name="code"><code class="hljs language-undefined">python my_labels.py</code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:9,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:9,&quot;runIdx&quot;:-1}}"></button></pre> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 会生成labels文件夹，里面放的是对应的txt文件 ;同时在&nbsp;ImageSets/Main路径下会生成train.txt和test.txt文件</p> <p>&nbsp;&nbsp; 2.如果标注的是txt格式，新建labels.py文件,复制以下内容：</p> <pre data-index="10" class="set-code-hide" name="code"><code class="hljs language-cobol"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># -<span class="hljs-operator">*</span>- coding: utf-<span class="hljs-number">8</span> -<span class="hljs-operator">*</span>-</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># 此代码和myData文件夹同目录</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import glob</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import os, <span class="hljs-keyword">random</span>, shutil</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import sys, getopt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import <span class="hljs-keyword">string</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#    train, <span class="hljs-keyword">test</span>, rate <span class="hljs-operator">=</span> getDir(sys.argv[<span class="hljs-number">1</span>:])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># <span class="hljs-keyword">if</span> tmp <span class="hljs-operator">&lt;=</span> <span class="hljs-number">0.0</span> <span class="hljs-keyword">or</span> tmp <span class="hljs-operator">&gt;=</span> <span class="hljs-number">1.0</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#   rate <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">def moveFile(trainDir, testDir, rate):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    rate<span class="hljs-operator">=</span>float(rate)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    pathDir <span class="hljs-operator">=</span> os.listdir(trainDir)          #返回指定的文件夹包含的文件或文件夹的名字的列表</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    filenumber<span class="hljs-operator">=</span>len(pathDir)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    print(<span class="hljs-string">"filenumber = "</span>, filenumber)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    picknumber<span class="hljs-operator">=</span>int(filenumber<span class="hljs-operator">*</span>rate)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    print(<span class="hljs-string">"picknumber = "</span>, picknumber)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    sample <span class="hljs-operator">=</span> <span class="hljs-keyword">random</span>.sample(pathDir, picknumber)          #从pathDir中随机选取picknumber个元素</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> sample:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        shutil.<span class="hljs-keyword">move</span>(os.path.join(trainDir,name), os.path.join(testDir,name))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">return</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">train_list <span class="hljs-operator">=</span> []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">test</span>_list <span class="hljs-operator">=</span> []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">train_<span class="hljs-keyword">file</span> <span class="hljs-operator">=</span> <span class="hljs-string">'train.txt'</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">test</span>_<span class="hljs-keyword">file</span> <span class="hljs-operator">=</span> <span class="hljs-string">'test.txt'</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">rate <span class="hljs-operator">=</span> <span class="hljs-number">0.80</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">if</span> __name__ <span class="hljs-operator">=</span><span class="hljs-operator">=</span> <span class="hljs-string">'__main__'</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    rate <span class="hljs-operator">=</span> float(rate)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #pathDir <span class="hljs-operator">=</span> os.listdir(<span class="hljs-string">'labels/'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    pathDir <span class="hljs-operator">=</span> os.listdir(<span class="hljs-string">'/home/your/darknet/myData/JPEGImages/'</span>)#改为你自己的路径</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    filenumber <span class="hljs-operator">=</span> len(pathDir)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    picknumber <span class="hljs-operator">=</span> int(filenumber <span class="hljs-operator">*</span> rate)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    sample <span class="hljs-operator">=</span> <span class="hljs-keyword">random</span>.sample(pathDir, picknumber)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> sample:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        train_list.append(name)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> pathDir:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> name <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> sample:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">test</span>_list.append(name)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    cur_dir <span class="hljs-operator">=</span> os.getcwd()                #返回当前进程的工作目录</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    train_images_dir <span class="hljs-operator">=</span> os.path.join(cur_dir, <span class="hljs-string">'JPEGImages/'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">with</span> <span class="hljs-keyword">open</span>(train_<span class="hljs-keyword">file</span>, <span class="hljs-string">'w'</span>) <span class="hljs-keyword">as</span> train_txt:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> train_list:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            jpg_name <span class="hljs-operator">=</span> name.strip()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            jpg_<span class="hljs-keyword">file</span> <span class="hljs-operator">=</span> os.path.join(train_images_dir, jpg_name)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            train_txt.<span class="hljs-keyword">write</span>(jpg_<span class="hljs-keyword">file</span> <span class="hljs-operator">+</span> <span class="hljs-string">'\n'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    train_txt.<span class="hljs-keyword">close</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">with</span> <span class="hljs-keyword">open</span>(<span class="hljs-keyword">test</span>_<span class="hljs-keyword">file</span>, <span class="hljs-string">'w'</span>) <span class="hljs-keyword">as</span> <span class="hljs-keyword">test</span>_txt:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> <span class="hljs-keyword">test</span>_list:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            jpg_name <span class="hljs-operator">=</span> name.strip()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            jpg_<span class="hljs-keyword">file</span> <span class="hljs-operator">=</span> os.path.join(train_images_dir, jpg_name)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">test</span>_txt.<span class="hljs-keyword">write</span>(jpg_<span class="hljs-keyword">file</span> <span class="hljs-operator">+</span> <span class="hljs-string">'\n'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">test</span>_txt.<span class="hljs-keyword">close</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    print(filenumber,picknumber,filenumber-picknumber)</div></div></li></ol></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreWhite.png" alt title></span></div><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:10,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:10,&quot;runIdx&quot;:-1}}"></button></pre> <p>&nbsp;&nbsp;&nbsp;&nbsp; 运行：</p> <pre data-index="11" class="set-code-show" name="code"><code class="language-python hljs">python labels.py</code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:11,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:11,&quot;runIdx&quot;:-1}}"></button></pre> <p>&nbsp;&nbsp;&nbsp; 会在myData文件夹下生成test.txt和train.txt文件</p> <p>3.在myData文件夹下新建myData.names文件，内容如下：</p> <pre data-index="12" class="set-code-show" name="code"><code class="hljs language-csharp"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-meta">#根据自己的数据集标注的标签，按照序号顺序填写</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">tissue</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">roll-of-paper</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">battled-drinks</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">chewing-gum</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">banana</div></div></li></ol></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:12,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:12,&quot;runIdx&quot;:-1}}"></button></pre> <p><strong>四.cfg文件和data文件的修改</strong></p> <p>&nbsp; 在cfg文件夹中创建my_data.data文件，复制以下内容：</p> <p></p> <pre data-index="13" class="set-code-show" name="code"><code class="hljs language-cobol"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">classes<span class="hljs-operator">=</span> <span class="hljs-number">5</span> ##改为自己的分类个数</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">##下面都改为自己的路径</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">train  <span class="hljs-operator">=</span> <span class="hljs-operator">/</span>home<span class="hljs-operator">/</span>your<span class="hljs-operator">/</span>darknet<span class="hljs-operator">/</span>myData<span class="hljs-operator">/</span>train.txt #你的train.txt和<span class="hljs-keyword">test</span>.txt在哪里就改成相应路径</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">valid</span>  <span class="hljs-operator">=</span> <span class="hljs-operator">/</span>home<span class="hljs-operator">/</span>your<span class="hljs-operator">/</span>darknet<span class="hljs-operator">/</span>myData<span class="hljs-operator">/</span><span class="hljs-keyword">test</span>.txt</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">names <span class="hljs-operator">=</span> <span class="hljs-operator">/</span>home<span class="hljs-operator">/</span>your<span class="hljs-operator">/</span>darknet<span class="hljs-operator">/</span>myData<span class="hljs-operator">/</span>myData.names</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">backup <span class="hljs-operator">=</span> <span class="hljs-operator">/</span>home<span class="hljs-operator">/</span>your<span class="hljs-operator">/</span>darknet<span class="hljs-operator">/</span>myData<span class="hljs-operator">/</span>backup<span class="hljs-operator">/</span></div></div></li></ol></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:13,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:13,&quot;runIdx&quot;:-1}}"></button></pre> <p><strong>&nbsp; </strong>复制cfg文件夹中的yolov3.cfg</p> <p>&nbsp; 以下是cfg文件参数详解，<a class="link-info" href="https://blog.csdn.net/weixin_42731241/article/details/81474920" title="参考">参考</a></p> <p>&nbsp; 我的显卡只能支持batch=64时subdvision=64，如果出现cuda out of memory错误，可以减小batch或增大subdvision ；max_batches根据个人需求修改，如果数据集不大的话可以设置小一些，我的数据集100-500张图片的基本都在1200左右达到不错的效果，1500-1800左右收敛，所以当数据集不大时可以考虑修改为2000，这是我自己的拙见。</p> <pre data-index="14" class="set-code-hide" name="code"><code class="hljs language-cobol"><ol class="hljs-ln hundred" style="width:1547px"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[net]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># Testing                                  测试模式</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># batch<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># subdivisions<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># Training                                 训练模式</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> batch<span class="hljs-operator">=</span><span class="hljs-number">64</span>                                  一批训练样本的样本数量，每batch个样本更新一次参数</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> subdivisions<span class="hljs-operator">=</span><span class="hljs-number">16</span>                           batch<span class="hljs-operator">/</span>subdivisions作为一次性送入训练器的样本数量,如果内存不够大，将batch分割为subdivisions个子batch</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   上面这两个参数如果电脑内存小，则把batch改小一点，batch越大，训练效果越好</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   subdivisions越大，可以减轻显卡压力</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">width<span class="hljs-operator">=</span><span class="hljs-number">416</span>                                  <span class="hljs-keyword">input</span>图像的宽</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">height<span class="hljs-operator">=</span><span class="hljs-number">416</span>                                 <span class="hljs-keyword">input</span>图像的高</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">channels<span class="hljs-operator">=</span><span class="hljs-number">3</span>                                 <span class="hljs-keyword">input</span>图像的通道数</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                           以上三个参数为输入图像的参数信息 width和height影响网络对输入图像的分辨率，</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                       从而影响precision，只可以设置成<span class="hljs-number">32</span>的倍数</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">momentum<span class="hljs-operator">=</span><span class="hljs-number">0.9</span>                               [?]DeepLearning<span class="hljs-number">1</span>中最优化方法中的动量参数，这个值影响着梯度下降到最优值得速度https:<span class="hljs-operator">/</span><span class="hljs-operator">/</span>nanfei.ink<span class="hljs-operator">/</span><span class="hljs-number">2018</span><span class="hljs-operator">/</span><span class="hljs-number">01</span><span class="hljs-operator">/</span><span class="hljs-number">23</span><span class="hljs-operator">/</span>YOLOv<span class="hljs-number">2</span>%E<span class="hljs-number">8</span>%B<span class="hljs-number">0</span>%<span class="hljs-number">83</span>%E<span class="hljs-number">5</span>%<span class="hljs-number">8</span>F%<span class="hljs-number">82</span>%E<span class="hljs-number">6</span>%<span class="hljs-number">80</span>%BB%E<span class="hljs-number">7</span>%BB%<span class="hljs-number">93</span><span class="hljs-operator">/</span>#more</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">decay<span class="hljs-operator">=</span><span class="hljs-number">0.0005</span>                               [?]权重衰减正则项，防止过拟合.每一次学习的过程中，将学习后的参数按照固定比例进行降低，为了防止过拟合，decay参数越大对过拟合的抑制能力越强。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">angle<span class="hljs-operator">=</span><span class="hljs-number">0</span>                                    通过旋转角度来生成更多训练样本</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">saturation <span class="hljs-operator">=</span> <span class="hljs-number">1.5</span>                           通过调整饱和度来生成更多训练样本</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">exposure <span class="hljs-operator">=</span> <span class="hljs-number">1.5</span>                             通过调整曝光量来生成更多训练样本</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">hue<span class="hljs-operator">=</span>.<span class="hljs-number">1</span>                                     通过调整色调来生成更多训练样本</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">learning_rate<span class="hljs-operator">=</span><span class="hljs-number">0.001</span>                        学习率决定着权值更新的速度，设置得太大会使结果超过最优值，太小会使下降速度过慢。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   如果仅靠人为干预调整参数，需要不断修改学习率。刚开始训练时可以将学习率设置的高一点，</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   而一定轮数之后，将其减小</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   在训练过程中，一般根据训练轮数设置动态变化的学习率。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   刚开始训练时：学习率以 <span class="hljs-number">0.01</span> ~ <span class="hljs-number">0.001</span> 为宜。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   一定轮数过后：逐渐减缓。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   接近训练结束：学习速率的衰减应该在<span class="hljs-number">100</span>倍以上。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   学习率的调整参考https:<span class="hljs-operator">/</span><span class="hljs-operator">/</span>blog.csdn.net<span class="hljs-operator">/</span>qq_<span class="hljs-number">33485434</span><span class="hljs-operator">/</span>article<span class="hljs-operator">/</span>details<span class="hljs-operator">/</span><span class="hljs-number">80452941</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">burn_<span class="hljs-keyword">in</span><span class="hljs-operator">=</span><span class="hljs-number">1000</span>                               在迭代次数小于burn_<span class="hljs-keyword">in</span>时，其学习率的更新有一种方式，大于burn_<span class="hljs-keyword">in</span>时，才采用policy的更新方式</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">max_batches <span class="hljs-operator">=</span> <span class="hljs-number">20200</span>                        训练达到max_batches后停止学习</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">policy<span class="hljs-operator">=</span>steps                               这个是学习率调整的策略，有policy：<span class="hljs-keyword">constant</span>, steps, exp, poly, step, sig, <span class="hljs-keyword">RANDOM</span>，<span class="hljs-keyword">constant</span>等方式</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                       参考https:<span class="hljs-operator">/</span><span class="hljs-operator">/</span>nanfei.ink<span class="hljs-operator">/</span><span class="hljs-number">2018</span><span class="hljs-operator">/</span><span class="hljs-number">01</span><span class="hljs-operator">/</span><span class="hljs-number">23</span><span class="hljs-operator">/</span>YOLOv<span class="hljs-number">2</span>%E<span class="hljs-number">8</span>%B<span class="hljs-number">0</span>%<span class="hljs-number">83</span>%E<span class="hljs-number">5</span>%<span class="hljs-number">8</span>F%<span class="hljs-number">82</span>%E<span class="hljs-number">6</span>%<span class="hljs-number">80</span>%BB%E<span class="hljs-number">7</span>%BB%<span class="hljs-number">93</span><span class="hljs-operator">/</span>#more</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">steps<span class="hljs-operator">=</span><span class="hljs-number">40000,45000</span>                          下面这两个参数steps和scale是设置学习率的变化，比如迭代到<span class="hljs-number">40000</span>次时，学习率衰减十倍。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">scales<span class="hljs-operator">=</span>.<span class="hljs-number">1</span>,.<span class="hljs-number">1</span>                               <span class="hljs-number">45000</span>次迭代时，学习率又会在前一个学习率的基础上衰减十倍</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[convolutional]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">batch_normalize<span class="hljs-operator">=</span><span class="hljs-number">1</span>                          是否做BN</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filters<span class="hljs-operator">=</span><span class="hljs-number">32</span>                                 输出特征图的数量</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">size</span><span class="hljs-operator">=</span><span class="hljs-number">3</span>                                     卷积核的尺寸</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">stride<span class="hljs-operator">=</span><span class="hljs-number">1</span>                                   做卷积运算的步长</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">pad<span class="hljs-operator">=</span><span class="hljs-number">1</span>                                      如果pad为<span class="hljs-number">0</span>,padding由 padding参数指定;如果pad为<span class="hljs-number">1</span>，padding大小为<span class="hljs-keyword">size</span><span class="hljs-operator">/</span><span class="hljs-number">2</span>，padding应该是对输入图像左边缘拓展的像素数量</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">activation<span class="hljs-operator">=</span>leaky                           激活函数的类型</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># Downsample</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="65"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[convolutional]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="66"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">batch_normalize<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="67"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filters<span class="hljs-operator">=</span><span class="hljs-number">64</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="68"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">size</span><span class="hljs-operator">=</span><span class="hljs-number">3</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="69"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">stride<span class="hljs-operator">=</span><span class="hljs-number">2</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="70"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">pad<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="71"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">activation<span class="hljs-operator">=</span>leaky</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="72"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="73"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[convolutional]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="74"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">batch_normalize<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="75"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filters<span class="hljs-operator">=</span><span class="hljs-number">32</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="76"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">size</span><span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="77"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">stride<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="78"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">pad<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="79"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">activation<span class="hljs-operator">=</span>leaky</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="80"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="81"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[convolutional]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="82"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">batch_normalize<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="83"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filters<span class="hljs-operator">=</span><span class="hljs-number">64</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="84"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">size</span><span class="hljs-operator">=</span><span class="hljs-number">3</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="85"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">stride<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="86"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">pad<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="87"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">activation<span class="hljs-operator">=</span>leaky</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="88"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="89"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[shortcut]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="90"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">from</span><span class="hljs-operator">=</span>-<span class="hljs-number">3</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="91"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">activation<span class="hljs-operator">=</span>linear</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="92"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="93"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># Downsample</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="94"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="95"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   ......</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="96"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="97"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># Downsample</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="98"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="99"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="100"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">######################</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="101"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="102"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[convolutional]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="103"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">batch_normalize<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="104"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filters<span class="hljs-operator">=</span><span class="hljs-number">512</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="105"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">size</span><span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="106"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">stride<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="107"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">pad<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="108"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">activation<span class="hljs-operator">=</span>leaky</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="109"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="110"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[convolutional]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="111"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">batch_normalize<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="112"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">size</span><span class="hljs-operator">=</span><span class="hljs-number">3</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="113"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">stride<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="114"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">pad<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="115"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filters<span class="hljs-operator">=</span><span class="hljs-number">1024</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="116"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">activation<span class="hljs-operator">=</span>leaky</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="117"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="118"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[convolutional]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="119"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">batch_normalize<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="120"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filters<span class="hljs-operator">=</span><span class="hljs-number">512</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="121"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">size</span><span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="122"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">stride<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="123"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">pad<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="124"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">activation<span class="hljs-operator">=</span>leaky</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="125"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="126"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[convolutional]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="127"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">batch_normalize<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="128"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">size</span><span class="hljs-operator">=</span><span class="hljs-number">3</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="129"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">stride<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="130"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">pad<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="131"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filters<span class="hljs-operator">=</span><span class="hljs-number">1024</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="132"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">activation<span class="hljs-operator">=</span>leaky</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="133"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="134"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[convolutional]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="135"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">batch_normalize<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="136"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filters<span class="hljs-operator">=</span><span class="hljs-number">512</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="137"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">size</span><span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="138"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">stride<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="139"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">pad<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="140"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">activation<span class="hljs-operator">=</span>leaky</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="141"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="142"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[convolutional]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="143"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">batch_normalize<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="144"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">size</span><span class="hljs-operator">=</span><span class="hljs-number">3</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="145"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">stride<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="146"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">pad<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="147"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filters<span class="hljs-operator">=</span><span class="hljs-number">1024</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="148"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">activation<span class="hljs-operator">=</span>leaky</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="149"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="150"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[convolutional]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="151"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">size</span><span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="152"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">stride<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="153"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">pad<span class="hljs-operator">=</span><span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="154"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filters<span class="hljs-operator">=</span><span class="hljs-number">45</span>                          每一个[region<span class="hljs-operator">/</span>yolo]层前的最后一个卷积层中的 filters<span class="hljs-operator">=</span>(classes<span class="hljs-operator">+</span><span class="hljs-number">1</span><span class="hljs-operator">+</span>coords)<span class="hljs-operator">*</span>anchors_num，</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="155"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                    其中anchors_num 是该层mask的一个值.如果没有mask则 anchors_num<span class="hljs-operator">=</span>num是这层的ancho</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="156"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-number">5</span>的意义是<span class="hljs-number">5</span>个坐标，论文中的tx,ty,tw,th,<span class="hljs-keyword">to</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="157"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">activation<span class="hljs-operator">=</span>linear</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="158"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="159"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[yolo]                              在yoloV<span class="hljs-number">2</span>中yolo层叫region层</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="160"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">mask <span class="hljs-operator">=</span> <span class="hljs-number">6,7,8</span>                        这一层预测第<span class="hljs-number">6</span>、<span class="hljs-number">7</span>、<span class="hljs-number">8</span>个 anchor boxes ，每个yolo层实际上只预测<span class="hljs-number">3</span>个由mask定义的anchors</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="161"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="162"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="163"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">anchors <span class="hljs-operator">=</span> <span class="hljs-number">10,13</span>,  <span class="hljs-number">16,30</span>,  <span class="hljs-number">33,23</span>,  <span class="hljs-number">30,61</span>,  <span class="hljs-number">62,45</span>,  <span class="hljs-number">59,119</span>,  <span class="hljs-number">116,90</span>,  <span class="hljs-number">156,198</span>,  <span class="hljs-number">373,326</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="164"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                    [?]anchors是可以事先通过cmd指令计算出来的，是和图片数量，width,height以及cluster(应该就是下面的num的值，</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="165"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                即想要使用的anchors的数量)相关的预选框，可以手工挑选，也可以通过kmeans 从训练样本中学出</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="166"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="167"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="168"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">classes<span class="hljs-operator">=</span><span class="hljs-number">10</span>                          网络需要识别的物体种类数</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="169"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">num<span class="hljs-operator">=</span><span class="hljs-number">9</span>                               每个grid cell预测几个box,和anchors的数量一致。当想要使用更多anchors时需要调大num，且如果调大num后训练时Obj趋近<span class="hljs-number">0</span>的话可以尝试调大<span class="hljs-keyword">object</span>_scale</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="170"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">jitter<span class="hljs-operator">=</span>.<span class="hljs-number">3</span>                           [?]利用数据抖动产生更多数据，YOLOv<span class="hljs-number">2</span>中使用的是crop，filp，以及net层的angle，flip是随机的，</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="171"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                jitter就是crop的参数，tiny-yolo-voc.cfg中jitter<span class="hljs-operator">=</span>.<span class="hljs-number">3</span>，就是在<span class="hljs-number">0</span>~<span class="hljs-number">0.3</span>中进行crop</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="172"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="173"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="174"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">ignore_thresh <span class="hljs-operator">=</span> .<span class="hljs-number">5</span>                  决定是否需要计算IOU误差的参数，大于thresh，IOU误差不会夹在cost <span class="hljs-keyword">function</span>中 </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="175"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">truth_thresh <span class="hljs-operator">=</span> <span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="176"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">random</span><span class="hljs-operator">=</span><span class="hljs-number">0</span>                            如果为<span class="hljs-number">1</span>，每次迭代图片大小随机从<span class="hljs-number">320</span>到<span class="hljs-number">608</span>，步长为<span class="hljs-number">32</span>，如果为<span class="hljs-number">0</span>，每次训练大小与输入大小一致</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="177"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="178"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">[route]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="179"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">layers <span class="hljs-operator">=</span> -<span class="hljs-number">4</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="180"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="181"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">......</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="182"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="183"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="184"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#可以添加没有标注框的图片和其空的txt文件，作为negative数据</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="185"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#可以在第一个[yolo]层之前的倒数第二个[convolutional]层末尾添加 stopbackward<span class="hljs-operator">=</span><span class="hljs-number">1</span>,以此提升训练速度</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="186"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#即使在用<span class="hljs-number">416</span><span class="hljs-operator">*</span><span class="hljs-number">416</span>训练完之后，也可以在cfg文件中设置较大的width和height，增加网络对图像的分辨率，从而更可能检测出图像中的小目标，而不需要重新训练</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="187"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#Out <span class="hljs-keyword">of</span> memory的错误需要通过增大subdivisions来解决</div></div></li></ol></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreWhite.png" alt title></span></div><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:14,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:14,&quot;runIdx&quot;:-1}}"></button></pre> <p>修改yolo层和yolo层上的convolutional层的参数，具体为：</p> <pre data-index="15" class="set-code-show" name="code"><code class="hljs language-cobol"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">convolutional层中：</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">filters<span class="hljs-operator">=</span>(classes<span class="hljs-operator">+</span><span class="hljs-number">1</span><span class="hljs-operator">+</span>coords)<span class="hljs-operator">*</span>anchors_num  一般为filters<span class="hljs-operator">=</span>(classes<span class="hljs-operator">+</span><span class="hljs-number">5</span>)<span class="hljs-operator">*</span><span class="hljs-number">3</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">yolo层中</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">classes<span class="hljs-operator">=</span>数据集中的物体个数</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#一共要改<span class="hljs-number">3</span>处</div></div></li></ol></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:15,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:15,&quot;runIdx&quot;:-1}}"></button></pre> <p>可以改变yolo层中的anchor的值使结果精度更高，但改不改好像没什么区别，如果要修改的话，在myData文件夹下新建anchors.py文件，复制以下内容：<a class="link-info" href="https://zhangping.blog.csdn.net/article/details/84942680" rel="nofollow" title="参考">参考</a></p> <pre data-index="16" class="set-code-hide" name="code"><code class="hljs language-cobol"><ol class="hljs-ln hundred" style="width:1150px"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"># -<span class="hljs-operator">*</span>- coding: utf-<span class="hljs-number">8</span> -<span class="hljs-operator">*</span>-</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import numpy <span class="hljs-keyword">as</span> np</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import <span class="hljs-keyword">random</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import argparse</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import os</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#参数名称</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">parser <span class="hljs-operator">=</span> argparse.ArgumentParser(description<span class="hljs-operator">=</span><span class="hljs-string">'使用该脚本生成YOLO-V3的anchor boxes\n'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">'--input_annotation_txt_dir'</span>,required<span class="hljs-operator">=</span><span class="hljs-keyword">True</span>,<span class="hljs-keyword">type</span><span class="hljs-operator">=</span>str,help<span class="hljs-operator">=</span><span class="hljs-string">'输入存储图片的标注txt文件(注意不要有中文)'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">'--output_anchors_txt'</span>,required<span class="hljs-operator">=</span><span class="hljs-keyword">True</span>,<span class="hljs-keyword">type</span><span class="hljs-operator">=</span>str,help<span class="hljs-operator">=</span><span class="hljs-string">'输出的存储Anchor boxes的文本文件'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">'--input_num_anchors'</span>,required<span class="hljs-operator">=</span><span class="hljs-keyword">True</span>,<span class="hljs-keyword">default</span><span class="hljs-operator">=</span><span class="hljs-number">6</span>,<span class="hljs-keyword">type</span><span class="hljs-operator">=</span>int,help<span class="hljs-operator">=</span><span class="hljs-string">'输入要计算的聚类（Anchor boxes的个数）'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">'--input_cfg_width'</span>,required<span class="hljs-operator">=</span><span class="hljs-keyword">True</span>,<span class="hljs-keyword">type</span><span class="hljs-operator">=</span>int,help<span class="hljs-operator">=</span><span class="hljs-string">"配置文件中width"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">'--input_cfg_height'</span>,required<span class="hljs-operator">=</span><span class="hljs-keyword">True</span>,<span class="hljs-keyword">type</span><span class="hljs-operator">=</span>int,help<span class="hljs-operator">=</span><span class="hljs-string">"配置文件中height"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">args <span class="hljs-operator">=</span> parser.parse_args()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">''</span><span class="hljs-string"><span class="hljs-string">'</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">centroids 聚类点 尺寸是 numx2,类型是ndarray</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">annotation_array 其中之一的标注框</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">'</span><span class="hljs-string">''</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">def IOU(annotation_array,centroids):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    similarities <span class="hljs-operator">=</span> []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #其中一个标注框</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    w,h <span class="hljs-operator">=</span> annotation_array</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">for</span> centroid <span class="hljs-keyword">in</span> centroids:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        c_w,c_h <span class="hljs-operator">=</span> centroid</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> c_w <span class="hljs-operator">&gt;=</span>w <span class="hljs-keyword">and</span> c_h <span class="hljs-operator">&gt;=</span> h:#第<span class="hljs-number">1</span>中情况</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            similarity <span class="hljs-operator">=</span> w<span class="hljs-operator">*</span>h<span class="hljs-operator">/</span>(c_w<span class="hljs-operator">*</span>c_h)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        elif c_w <span class="hljs-operator">&gt;=</span> w <span class="hljs-keyword">and</span> c_h <span class="hljs-operator">&lt;=</span> h:#第<span class="hljs-number">2</span>中情况</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            similarity <span class="hljs-operator">=</span> w<span class="hljs-operator">*</span>c_h<span class="hljs-operator">/</span>(w<span class="hljs-operator">*</span>h <span class="hljs-operator">+</span> (c_w<span class="hljs-operator"> - </span>w)<span class="hljs-operator">*</span>c_h)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        elif c_w <span class="hljs-operator">&lt;=</span> w <span class="hljs-keyword">and</span> c_h <span class="hljs-operator">&gt;=</span> h:#第<span class="hljs-number">3</span>种情况</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            similarity <span class="hljs-operator">=</span> c_w<span class="hljs-operator">*</span>h<span class="hljs-operator">/</span>(w<span class="hljs-operator">*</span>h <span class="hljs-operator">+</span>(c_h<span class="hljs-operator"> - </span>h)<span class="hljs-operator">*</span>c_w)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">else</span>:#第<span class="hljs-number">3</span>种情况</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            similarity <span class="hljs-operator">=</span> (c_w<span class="hljs-operator">*</span>c_h)<span class="hljs-operator">/</span>(w<span class="hljs-operator">*</span>h)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        similarities.append(similarity)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #将列表转换为ndarray</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">return</span> np.array(similarities,np.float<span class="hljs-number">32</span>) #返回的是一维数组，尺寸为(num,)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">''</span><span class="hljs-string"><span class="hljs-string">'</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">k_means:k均值聚类</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">annotations_array 所有的标注框的宽高，N个标注框，尺寸是Nx2,类型是ndarray</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">centroids 聚类点 尺寸是 numx2,类型是ndarray</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">'</span><span class="hljs-string">''</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">def k_means(annotations_array,centroids,eps<span class="hljs-operator">=</span><span class="hljs-number">0.00005</span>,iterations<span class="hljs-operator">=</span><span class="hljs-number">200000</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    N <span class="hljs-operator">=</span> annotations_array.shape[<span class="hljs-number">0</span>]#C<span class="hljs-operator">=</span><span class="hljs-number">2</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    num <span class="hljs-operator">=</span> centroids.shape[<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #损失函数</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    distance_<span class="hljs-keyword">sum</span>_pre <span class="hljs-operator">=</span> -<span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    assignments_pre <span class="hljs-operator">=</span> -<span class="hljs-number">1</span><span class="hljs-operator">*</span>np.ones(N,dtype<span class="hljs-operator">=</span>np.int<span class="hljs-number">64</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    iteration <span class="hljs-operator">=</span> <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #循环处理</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    while(<span class="hljs-keyword">True</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        iteration <span class="hljs-operator">+</span><span class="hljs-operator">=</span> <span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        distances <span class="hljs-operator">=</span> []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #循环计算每一个标注框与所有的聚类点的距离（IOU）</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(N):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            distance <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator"> - </span>IOU(annotations_array[i],centroids)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            distances.append(distance)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #列表转换成ndarray</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        distances_array <span class="hljs-operator">=</span> np.array(distances,np.float<span class="hljs-number">32</span>)#该ndarray的尺寸为 Nxnum</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #找出每一个标注框到当前聚类点最近的点</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        assignments <span class="hljs-operator">=</span> np.argmin(distances_array,axis<span class="hljs-operator">=</span><span class="hljs-number">1</span>)#计算每一行的最小值的位置索引</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="65"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #计算距离的总和，相当于k均值聚类的损失函数</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="66"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        distances_<span class="hljs-keyword">sum</span> <span class="hljs-operator">=</span> np.<span class="hljs-keyword">sum</span>(distances_array)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="67"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #计算新的聚类点</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="68"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        centroid_sums <span class="hljs-operator">=</span> np.<span class="hljs-literal">zeros</span>(centroids.shape,np.float<span class="hljs-number">32</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="69"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(N):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="70"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            centroid_sums[assignments[i]] <span class="hljs-operator">+</span><span class="hljs-operator">=</span> annotations_array[i]#计算属于每一聚类类别的和</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="71"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(num):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="72"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            centroids[j] <span class="hljs-operator">=</span> centroid_sums[j]<span class="hljs-operator">/</span>(np.<span class="hljs-keyword">sum</span>(assignments<span class="hljs-operator">=</span><span class="hljs-operator">=</span>j))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="73"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #前后两次的距离变化</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="74"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        diff <span class="hljs-operator">=</span> abs(distances_sum-distance_<span class="hljs-keyword">sum</span>_pre)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="75"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #打印结果</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="76"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        print(<span class="hljs-string">"iteration: &#123;&#125;,distance: &#123;&#125;, diff: &#123;&#125;, avg_IOU: &#123;&#125;\n"</span>.<span class="hljs-keyword">format</span>(iteration,distances_<span class="hljs-keyword">sum</span>,diff,np.<span class="hljs-keyword">sum</span>(<span class="hljs-number">1</span>-distances_array)<span class="hljs-operator">/</span>(N<span class="hljs-operator">*</span>num)))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="77"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #三种情况跳出while循环：<span class="hljs-number">1</span>：循环<span class="hljs-number">20000</span>次，<span class="hljs-number">2</span>：eps计算平均的距离很小 <span class="hljs-number">3</span>：以上的情况</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="78"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> (assignments<span class="hljs-operator">=</span><span class="hljs-operator">=</span>assignments_pre).<span class="hljs-literal">all</span>():</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="79"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            print(<span class="hljs-string">"按照前后两次的得到的聚类结果是否相同结束循环\n"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="80"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            break</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="81"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> diff <span class="hljs-operator">&lt;</span> eps:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="82"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            print(<span class="hljs-string">"按照eps结束循环\n"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="83"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            break</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="84"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> iteration <span class="hljs-operator">&gt;</span> iterations:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="85"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            print(<span class="hljs-string">"按照迭代次数结束循环\n"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="86"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            break</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="87"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #记录上一次迭代</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="88"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        distance_<span class="hljs-keyword">sum</span>_pre <span class="hljs-operator">=</span> distances_<span class="hljs-keyword">sum</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="89"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        assignments_pre <span class="hljs-operator">=</span> assignments.<span class="hljs-keyword">copy</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="90"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">if</span> __name__<span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-string">'__main__'</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="91"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #聚类点的个数，anchor boxes的个数</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="92"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    num_clusters <span class="hljs-operator">=</span> args.<span class="hljs-keyword">input</span>_num_anchors</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="93"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #索引出文件夹中的每一个标注文件的名字(.txt)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="94"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    names <span class="hljs-operator">=</span> os.listdir(args.<span class="hljs-keyword">input</span>_annotation_txt_dir)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="95"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #标注的框的宽和高</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="96"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    annotations_w_h <span class="hljs-operator">=</span> []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="97"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> names:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="98"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        txt_path <span class="hljs-operator">=</span> os.path.join(args.<span class="hljs-keyword">input</span>_annotation_txt_dir,name)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="99"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #读取txt文件中的每一行</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="100"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        f <span class="hljs-operator">=</span> <span class="hljs-keyword">open</span>(txt_path,<span class="hljs-string">'r'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="101"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> <span class="hljs-keyword">line</span> <span class="hljs-keyword">in</span> f.readlines():</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="102"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">line</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">line</span>.rstrip(<span class="hljs-string">'\n'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="103"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            w,h <span class="hljs-operator">=</span> <span class="hljs-keyword">line</span>.split(<span class="hljs-string">' '</span>)[<span class="hljs-number">3</span>:]#这时读到的w,h是字符串类型</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="104"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            #eval()函数用来将字符串转换为数值型</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="105"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            annotations_w_h.append((eval(w),eval(h)))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="106"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        f.<span class="hljs-keyword">close</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="107"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #将列表annotations_w_h转换为numpy中的array,尺寸是(N,<span class="hljs-number">2</span>),N代表多少框</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="108"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        annotations_array <span class="hljs-operator">=</span> np.array(annotations_w_h,dtype<span class="hljs-operator">=</span>np.float<span class="hljs-number">32</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="109"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    N <span class="hljs-operator">=</span> annotations_array.shape[<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="110"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #对于k-means聚类，随机初始化聚类点</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="111"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">random</span>_indices <span class="hljs-operator">=</span> [<span class="hljs-keyword">random</span>.randrange(N) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(num_clusters)]#产生随机数</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="112"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    centroids <span class="hljs-operator">=</span> annotations_array[<span class="hljs-keyword">random</span>_indices]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="113"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #k-means聚类</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="114"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    k_means(annotations_array,centroids,<span class="hljs-number">0.00005,200000</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="115"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #对centroids按照宽排序，并写入文件</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="116"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    widths <span class="hljs-operator">=</span> centroids[:,<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="117"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    sorted_indices <span class="hljs-operator">=</span> np.argsort(widths)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="118"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    anchors <span class="hljs-operator">=</span> centroids[sorted_indices]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="119"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #将anchor写入文件并保存</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="120"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    f_anchors <span class="hljs-operator">=</span> <span class="hljs-keyword">open</span>(args.<span class="hljs-keyword">output</span>_anchors_txt,<span class="hljs-string">'w'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="121"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    #</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="122"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">for</span> anchor <span class="hljs-keyword">in</span>  anchors:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="123"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        f_anchors.<span class="hljs-keyword">write</span>(<span class="hljs-string">'%d,%d'</span>%(int(anchor[<span class="hljs-number">0</span>]<span class="hljs-operator">*</span>args.<span class="hljs-keyword">input</span>_cfg_width),int(anchor[<span class="hljs-number">1</span>]<span class="hljs-operator">*</span>args.<span class="hljs-keyword">input</span>_cfg_height)))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="124"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        f_anchors.<span class="hljs-keyword">write</span>(<span class="hljs-string">'\n'</span>)</div></div></li></ol></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreWhite.png" alt title></span></div><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:16,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:16,&quot;runIdx&quot;:-1}}"></button></pre> <p><strong>五.开始训练 </strong></p> <p>1.下载预训练文件（有的话更好，没有也能跑）终端输入：&nbsp;（如果下载的很慢的话可以从博主的<a class="link-info" href="https://blog.csdn.net/perfectdisaster/article/details/125680591?spm=1001.2014.3001.5502" title="这篇博客">这篇博客</a>下载）</p> <pre data-index="17" class="set-code-show" name="code"><code class="hljs language-cobol">wget https:<span class="hljs-operator">/</span><span class="hljs-operator">/</span>pjreddie.com<span class="hljs-operator">/</span>media<span class="hljs-operator">/</span>files<span class="hljs-operator">/</span>darknet<span class="hljs-number">53</span>.conv.<span class="hljs-number">74</span></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:17,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:17,&quot;runIdx&quot;:-1}}"></button></pre> <p>2.开始训练，终端输入：</p> <pre data-index="18" class="set-code-show" name="code"><code class="hljs language-cobol"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">.<span class="hljs-operator">/</span>darknet detector train cfg<span class="hljs-operator">/</span>my_<span class="hljs-keyword">data</span>.<span class="hljs-keyword">data</span> cfg<span class="hljs-operator">/</span>my_yolov<span class="hljs-number">3</span>.cfg darknet<span class="hljs-number">53</span>.conv.<span class="hljs-number">74</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">或者指定gpu训练，默认使用gpu<span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">.<span class="hljs-operator">/</span>darknet detector train cfg<span class="hljs-operator">/</span>my_<span class="hljs-keyword">data</span>.<span class="hljs-keyword">data</span> cfg<span class="hljs-operator">/</span>my_yolov<span class="hljs-number">3</span>.cfg darknet<span class="hljs-number">53</span>.conv.<span class="hljs-number">74</span> -gups <span class="hljs-number">0,1,2,3</span></div></div></li></ol></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:18,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:18,&quot;runIdx&quot;:-1}}"></button></pre> <p>&nbsp;3.等待训练完成，在myData文件夹下的backup文件夹(需要自己创建）中寻找这一炉仙丹吧</p> <p>&nbsp;4.如果中途因为out of memory中断进程，修改batches和subdvision 重新训练，从中断处开始训练：</p> <pre data-index="19" class="set-code-show" name="code"><code class="hljs language-cobol">.<span class="hljs-operator">/</span>darknet detector train cfg<span class="hljs-operator">/</span>my_<span class="hljs-keyword">data</span>.<span class="hljs-keyword">data</span> cfg<span class="hljs-operator">/</span>my_yolov<span class="hljs-number">3</span>.cfg myData<span class="hljs-operator">/</span>backup<span class="hljs-operator">/</span>my_yolov<span class="hljs-number">3</span>.backup -gpus <span class="hljs-number">0,1,2,3</span></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:19,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:19,&quot;runIdx&quot;:-1}}"></button></pre> <p>我的效果图（1200的时候有点事退出去了，最后效果还可以，但avg loss达到0.06左右效果更好：<img alt src="https://i-blog.csdnimg.cn/blog_migrate/eb12f385cd8b0eae3e58123d0b09135b.png"></p> <p></p> <p><strong>六.测试</strong></p> <p>终端输入：</p> <pre data-index="20" class="set-code-show" name="code"><code class="hljs language-cobol"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#图片测试，视频检测同理</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">.<span class="hljs-operator">/</span>darknet detector <span class="hljs-keyword">test</span> cfg<span class="hljs-operator">/</span>my_<span class="hljs-keyword">data</span>.<span class="hljs-keyword">data</span> cfg<span class="hljs-operator">/</span>my_yolov<span class="hljs-number">3</span>.cfg myData<span class="hljs-operator">/</span>backup<span class="hljs-operator">/</span>my_yolov<span class="hljs-number">3</span>_<span class="hljs-keyword">last</span>.weights <span class="hljs-number">1</span>.jpg</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#<span class="hljs-number">1</span>.jpg改为图片路径<span class="hljs-operator">+</span>图片名，我直接在darknet文件夹下检测的，所以没有加路径</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#或者运行darknet文件夹下的darknet_images.py文件，记得修改路径</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">python<span class="hljs-number">3</span> darknet_images.py</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">#摄像头测试</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">.<span class="hljs-operator">/</span>darknet detector demo cfg<span class="hljs-operator">/</span>my_<span class="hljs-keyword">data</span>.<span class="hljs-keyword">data</span> cfg<span class="hljs-operator">/</span>my_yolov<span class="hljs-number">3</span>.cfg myData<span class="hljs-operator">/</span>backup<span class="hljs-operator">/</span>my_yolov<span class="hljs-number">3</span>_<span class="hljs-keyword">last</span>.weights </div></div></li></ol></code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:20,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:20,&quot;runIdx&quot;:-1}}"></button></pre> <p>我的最终效果:<img alt src="https://i-blog.csdnimg.cn/blog_migrate/1f5f74c5c6f8d01a02dc71b2b733e0cd.png"></p> <p><strong>七.批量测试</strong></p> <p>在darknet文件夹下创建detect.py,复制以下内容（注意修改为自己的路径）：</p> <pre data-index="21" class="set-code-hide" name="code"><code class="hljs language-cobol"><ol class="hljs-ln hundred" style="width:1204px"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import argparse</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import os</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import glob</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import <span class="hljs-keyword">random</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import darknet</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import <span class="hljs-keyword">time</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import cv<span class="hljs-number">2</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import numpy <span class="hljs-keyword">as</span> np</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">import darknet</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">def parser():</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    parser <span class="hljs-operator">=</span> argparse.ArgumentParser(description<span class="hljs-operator">=</span><span class="hljs-string">"YOLO Object Detection"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">"--input"</span>, <span class="hljs-keyword">type</span><span class="hljs-operator">=</span>str, <span class="hljs-keyword">default</span><span class="hljs-operator">=</span><span class="hljs-string">""</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        help<span class="hljs-operator">=</span><span class="hljs-string">"image source. It can be a single image, a"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        <span class="hljs-string">"txt with paths to them, or a folder. Image valid"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        <span class="hljs-string">" formats are jpg, jpeg or png."</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        <span class="hljs-string">"If no input is given, "</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">"--batch_size"</span>, <span class="hljs-keyword">default</span><span class="hljs-operator">=</span><span class="hljs-number">1</span>, <span class="hljs-keyword">type</span><span class="hljs-operator">=</span>int,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        help<span class="hljs-operator">=</span><span class="hljs-string">"number of images to be processed at the same time"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">"--weights"</span>, <span class="hljs-keyword">default</span><span class="hljs-operator">=</span><span class="hljs-string">"myData/backup/my_yolov3_last.weights"</span>,#修改为自己的路径</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        help<span class="hljs-operator">=</span><span class="hljs-string">"yolo weights path"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">"--dont_show"</span>, action<span class="hljs-operator">=</span><span class="hljs-string">'store_true'</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        help<span class="hljs-operator">=</span><span class="hljs-string">"windown inference display. For headless systems"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">"--ext_output"</span>, action<span class="hljs-operator">=</span><span class="hljs-string">'store_true'</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        help<span class="hljs-operator">=</span><span class="hljs-string">"display bbox coordinates of detected objects"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">"--save_labels"</span>, action<span class="hljs-operator">=</span><span class="hljs-string">'store_true'</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        help<span class="hljs-operator">=</span><span class="hljs-string">"save detections bbox for each image in yolo format"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">"--config_file"</span>, <span class="hljs-keyword">default</span><span class="hljs-operator">=</span><span class="hljs-string">"./cfg/my_yolov3.cfg"</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        help<span class="hljs-operator">=</span><span class="hljs-string">"path to config file"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">"--data_file"</span>, <span class="hljs-keyword">default</span><span class="hljs-operator">=</span><span class="hljs-string">"./cfg/my_data.data"</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        help<span class="hljs-operator">=</span><span class="hljs-string">"path to data file"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    parser.<span class="hljs-keyword">add</span>_argument(<span class="hljs-string">"--thresh"</span>, <span class="hljs-keyword">type</span><span class="hljs-operator">=</span>float, <span class="hljs-keyword">default</span><span class="hljs-operator">=</span>.<span class="hljs-number">25</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                        help<span class="hljs-operator">=</span><span class="hljs-string">"remove detections with lower confidence"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">return</span> parser.parse_args()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">def check_arguments_errors(args):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    assert <span class="hljs-number">0</span> <span class="hljs-operator">&lt;</span> args.thresh <span class="hljs-operator">&lt;</span> <span class="hljs-number">1</span>, <span class="hljs-string">"Threshold should be a float between zero and one (non-inclusive)"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(args.config_<span class="hljs-keyword">file</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">raise</span>(ValueError(<span class="hljs-string">"Invalid config path &#123;&#125;"</span>.<span class="hljs-keyword">format</span>(os.path.abspath(args.config_<span class="hljs-keyword">file</span>))))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(args.weights):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">raise</span>(ValueError(<span class="hljs-string">"Invalid weight path &#123;&#125;"</span>.<span class="hljs-keyword">format</span>(os.path.abspath(args.weights))))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(args.<span class="hljs-keyword">data</span>_<span class="hljs-keyword">file</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">raise</span>(ValueError(<span class="hljs-string">"Invalid data file path &#123;&#125;"</span>.<span class="hljs-keyword">format</span>(os.path.abspath(args.<span class="hljs-keyword">data</span>_<span class="hljs-keyword">file</span>))))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">if</span> args.<span class="hljs-keyword">input</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> os.path.exists(args.<span class="hljs-keyword">input</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">raise</span>(ValueError(<span class="hljs-string">"Invalid image path &#123;&#125;"</span>.<span class="hljs-keyword">format</span>(os.path.abspath(args.<span class="hljs-keyword">input</span>))))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">def check_batch_shape(images, batch_<span class="hljs-keyword">size</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-string">""</span><span class="hljs-string"><span class="hljs-string">"</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        Image sizes should be the same width and height</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    "</span><span class="hljs-string">""</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    shapes <span class="hljs-operator">=</span> [image.shape <span class="hljs-keyword">for</span> image <span class="hljs-keyword">in</span> images]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">if</span> len(<span class="hljs-keyword">set</span>(shapes)) <span class="hljs-operator">&gt;</span> <span class="hljs-number">1</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">"Images don't have same shape"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">if</span> len(shapes) <span class="hljs-operator">&gt;</span> batch_<span class="hljs-keyword">size</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">"Batch size higher than number of images"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">return</span> shapes[<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">def load_images(images_path):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-string">""</span><span class="hljs-string"><span class="hljs-string">"</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    If image path is given, return it directly</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="65"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    For txt file, read it and return each line as image path</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="66"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    In other case, it's a folder, return a list with names of each</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="67"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    jpg, jpeg and png file</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="68"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    "</span><span class="hljs-string">""</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="69"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">input</span>_path_extension <span class="hljs-operator">=</span> images_path.split(<span class="hljs-string">'.'</span>)[-<span class="hljs-number">1</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="70"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">if</span> <span class="hljs-keyword">input</span>_path_extension <span class="hljs-keyword">in</span> [<span class="hljs-string">'jpg'</span>, <span class="hljs-string">'jpeg'</span>, <span class="hljs-string">'png'</span>]:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="71"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> [images_path]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="72"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    elif <span class="hljs-keyword">input</span>_path_extension <span class="hljs-operator">=</span><span class="hljs-operator">=</span> <span class="hljs-string">"txt"</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="73"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">with</span> <span class="hljs-keyword">open</span>(images_path, <span class="hljs-string">"r"</span>) <span class="hljs-keyword">as</span> f:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="74"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">return</span> f.<span class="hljs-keyword">read</span>().splitlines()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="75"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">else</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="76"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> glob.glob(</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="77"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            os.path.join(images_path, <span class="hljs-string">"*.jpg"</span>)) <span class="hljs-operator">+</span> \</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="78"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            glob.glob(os.path.join(images_path, <span class="hljs-string">"*.png"</span>)) <span class="hljs-operator">+</span> \</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="79"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            glob.glob(os.path.join(images_path, <span class="hljs-string">"*.jpeg"</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="80"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="81"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="82"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">def prepare_batch(images, network, channels<span class="hljs-operator">=</span><span class="hljs-number">3</span>):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="83"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    width <span class="hljs-operator">=</span> darknet.network_width(network)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="84"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    height <span class="hljs-operator">=</span> darknet.network_height(network)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="85"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="86"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    darknet_images <span class="hljs-operator">=</span> []</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="87"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">for</span> image <span class="hljs-keyword">in</span> images:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="88"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        image_rgb <span class="hljs-operator">=</span> cv<span class="hljs-number">2</span>.cvtColor(image, cv<span class="hljs-number">2</span>.COLOR_BGR<span class="hljs-number">2</span>RGB)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="89"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        image_resized <span class="hljs-operator">=</span> cv<span class="hljs-number">2</span>.resize(image_rgb, (width, height),</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="90"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                                   interpolation<span class="hljs-operator">=</span>cv<span class="hljs-number">2</span>.INTER_LINEAR)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="91"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        custom_image <span class="hljs-operator">=</span> image_resized.transpose(<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="92"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        darknet_images.append(custom_image)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="93"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="94"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    batch_array <span class="hljs-operator">=</span> np.concatenate(darknet_images, axis<span class="hljs-operator">=</span><span class="hljs-number">0</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="95"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    batch_array <span class="hljs-operator">=</span> np.ascontiguousarray(batch_array.flat, dtype<span class="hljs-operator">=</span>np.float<span class="hljs-number">32</span>)<span class="hljs-operator">/</span><span class="hljs-number">255.0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="96"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    darknet_images <span class="hljs-operator">=</span> batch_array.ctypes.<span class="hljs-keyword">data</span>_<span class="hljs-keyword">as</span>(darknet.<span class="hljs-keyword">POINTER</span>(darknet.c_float))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="97"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">return</span> darknet.IMAGE(width, height, channels, darknet_images)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="98"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="99"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="100"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">def image_detection(image_path,network, <span class="hljs-keyword">class</span>_names, <span class="hljs-keyword">class</span>_colors, thresh):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="101"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    # Darknet doesn<span class="hljs-string"><span class="hljs-string">'t accept numpy images.</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="102"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    # Create one with image we reuse for each detect</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="103"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    width = darknet.network_width(network)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="104"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    height = darknet.network_height(network)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="105"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    darknet_image = darknet.make_image(width, height, 3)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="106"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">   </span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="107"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    image = cv2.imread(image_path)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="108"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="109"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    image_resized = cv2.resize(image_rgb, (width, height),</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="110"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">                               interpolation=cv2.INTER_LINEAR)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="111"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="112"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    darknet.copy_image_from_bytes(darknet_image, image_resized.tobytes())</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="113"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    detections = darknet.detect_image(network, class_names, darknet_image, thresh=thresh)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="114"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    darknet.free_image(darknet_image)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="115"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    image = darknet.draw_boxes(detections, image_resized, class_colors)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="116"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    return cv2.cvtColor(image, cv2.COLOR_BGR2RGB), detections</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="117"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="118"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="119"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">def batch_detection(network, images, class_names, class_colors,</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="120"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">                    thresh=0.25, hier_thresh=.5, nms=.45, batch_size=4):</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="121"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    image_height, image_width, _ = check_batch_shape(images, batch_size)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="122"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    darknet_images = prepare_batch(images, network)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="123"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    batch_detections = darknet.network_predict_batch(network, darknet_images, batch_size, image_width,</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="124"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">                                                     image_height, thresh, hier_thresh, None, 0, 0)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="125"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    batch_predictions = []</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="126"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    for idx in range(batch_size):</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="127"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        num = batch_detections[idx].num</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="128"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        detections = batch_detections[idx].dets</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="129"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        if nms:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="130"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">            darknet.do_nms_obj(detections, num, len(class_names), nms)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="131"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        predictions = darknet.remove_negatives(detections, class_names, num)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="132"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        images[idx] = darknet.draw_boxes(predictions, images[idx], class_colors)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="133"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        batch_predictions.append(predictions)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="134"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    darknet.free_batch_detections(batch_detections, batch_size)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="135"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    return images, batch_predictions</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="136"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="137"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="138"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">def image_classification(image, network, class_names):</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="139"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    width = darknet.network_width(network)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="140"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    height = darknet.network_height(network)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="141"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="142"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    image_resized = cv2.resize(image_rgb, (width, height),</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="143"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">                                interpolation=cv2.INTER_LINEAR)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="144"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    darknet_image = darknet.make_image(width, height, 3)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="145"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    darknet.copy_image_from_bytes(darknet_image, image_resized.tobytes())</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="146"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    detections = darknet.predict_image(network, darknet_image)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="147"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    predictions = [(name, detections[idx]) for idx, name in enumerate(class_names)]</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="148"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    darknet.free_image(darknet_image)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="149"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    return sorted(predictions, key=lambda x: -x[1])</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="150"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="151"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="152"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">def convert2relative(image, bbox):</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="153"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    """</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="154"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    YOLO format use relative coordinates for annotation</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="155"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    """</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="156"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    x, y, w, h = bbox</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="157"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    height, width, _ = image.shape</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="158"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    return x/width, y/height, w/width, h/height</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="159"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="160"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="161"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">def save_annotations(name, image, detections, class_names):</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="162"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    """</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="163"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    Files saved with image_name.txt and relative coordinates</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="164"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    """</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="165"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    file_name = name.split(".")[:-1][0] + ".txt"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="166"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    with open(file_name, "w") as f:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="167"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        for label, confidence, bbox in detections:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="168"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">            x, y, w, h = convert2relative(image, bbox)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="169"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">            label = class_names.index(label)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="170"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">            f.write("&#123;&#125; &#123;:.4f&#125; &#123;:.4f&#125; &#123;:.4f&#125; &#123;:.4f&#125;\n".format(label, x, y, w, h))</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="171"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="172"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="173"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">def batch_detection_example():</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="174"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    args = parser()</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="175"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    check_arguments_errors(args)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="176"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    batch_size = 3</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="177"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    random.seed(3)  # deterministic bbox colors</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="178"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    network, class_names, class_colors = darknet.load_network(</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="179"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        args.config_file,</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="180"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        args.data_file,</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="181"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        args.weights,</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="182"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        batch_size=batch_size</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="183"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    )</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="184"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    image_names = ['</span><span class="hljs-keyword">data</span><span class="hljs-operator">/</span>horses.jpg<span class="hljs-string">', '</span><span class="hljs-keyword">data</span><span class="hljs-operator">/</span>horses.jpg<span class="hljs-string">', '</span><span class="hljs-keyword">data</span><span class="hljs-operator">/</span>eagle.jpg<span class="hljs-string"><span class="hljs-string">']</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="185"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    images = [cv2.imread(image) for image in image_names]</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="186"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    images, detections,  = batch_detection(network, images, class_names,</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="187"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">                                           class_colors, batch_size=batch_size)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="188"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    for name, image in zip(image_names, images):</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="189"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        cv2.imwrite(name.replace("data/", ""), image)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="190"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    print(detections)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="191"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="192"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">def get_files(dir, suffix): </span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="193"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="194"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    res = []</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="195"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="196"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    for root, directory, files in os.walk(dir): </span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="197"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="198"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        for filename in files:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="199"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="200"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">            name, suf = os.path.splitext(filename) </span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="201"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="202"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">            if suf == suffix:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="203"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="204"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">                #res.append(filename)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="205"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="206"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">                res.append(os.path.join(root, filename))</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="207"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    return res</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="208"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">def bbox2points_zs(bbox):</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="209"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    """</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="210"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    From bounding box yolo format</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="211"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    to corner points cv2 rectangle</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="212"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    """</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="213"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    x, y, w, h = bbox</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="214"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    xmin = int(round(x - (w / 2)))</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="215"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    xmax = int(round(x + (w / 2)))</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="216"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    ymin = int(round(y - (h / 2)))</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="217"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    ymax = int(round(y + (h / 2)))</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="218"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    return xmin, ymin, xmax, ymax</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="219"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="220"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">def main():</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="221"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    args = parser()</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="222"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    check_arguments_errors(args)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="223"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    input_dir = '</span><span class="hljs-operator">/</span>home<span class="hljs-operator">/</span>your<span class="hljs-operator">/</span>raid<span class="hljs-operator">/</span>darknet<span class="hljs-string"><span class="hljs-string">'</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="224"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    config_file = '</span><span class="hljs-operator">/</span>home<span class="hljs-operator">/</span>your<span class="hljs-operator">/</span>raid<span class="hljs-operator">/</span>darknet<span class="hljs-operator">/</span>cfg<span class="hljs-operator">/</span>my_yolov<span class="hljs-number">3</span>.cfg<span class="hljs-string"><span class="hljs-string">'</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="225"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    data_file = '</span><span class="hljs-operator">/</span>home<span class="hljs-operator">/</span>your<span class="hljs-operator">/</span>darknet<span class="hljs-operator">/</span>cfg<span class="hljs-operator">/</span>my_<span class="hljs-keyword">data</span>.<span class="hljs-keyword">data</span><span class="hljs-string"><span class="hljs-string">'</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="226"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    weights = '</span><span class="hljs-operator">/</span>home<span class="hljs-operator">/</span>your<span class="hljs-operator">/</span>darknet<span class="hljs-operator">/</span>myData<span class="hljs-operator">/</span>backup<span class="hljs-operator">/</span>my_yolov<span class="hljs-number">3</span>_<span class="hljs-keyword">last</span>.weights<span class="hljs-string"><span class="hljs-string">'#修改为自己的路径</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="227"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    random.seed(3)  # deterministic bbox colors</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="228"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    network, class_names, class_colors = darknet.load_network(</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="229"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        config_file,</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="230"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        data_file,</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="231"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        weights,</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="232"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        batch_size=args.batch_size</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="233"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    )</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="234"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    src_width = darknet.network_width(network)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="235"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    src_height = darknet.network_height(network)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="236"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="237"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    #生成保存图片路径文件夹</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="238"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    save_dir = os.path.join(input_dir, '</span><span class="hljs-keyword">object</span>_result<span class="hljs-string"><span class="hljs-string">')</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="239"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    # 去除首位空格</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="240"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    save_dir=save_dir.strip()</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="241"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    # 去除尾部 \ 符号</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="242"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    save_dir=save_dir.rstrip("\\")</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="243"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    # 判断路径是否存在 # 存在     True # 不存在   False</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="244"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    isExists=os.path.exists(save_dir)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="245"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    # 判断结果</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="246"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    if not isExists:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="247"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        # 如果不存在则创建目录 # 创建目录操作函数</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="248"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        os.makedirs(save_dir) </span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="249"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="250"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        print(save_dir+'</span> 创建成功<span class="hljs-string"><span class="hljs-string">')</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="251"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    else:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="252"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        # 如果目录存在 则不创建，并提示目录已存在</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="253"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        print(save_dir + '</span> 目录已存在<span class="hljs-string"><span class="hljs-string">')</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="254"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="255"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    image_list = get_files(input_dir, '</span>.jpg<span class="hljs-string"><span class="hljs-string">')</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="256"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    total_len = len(image_list)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="257"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    index = 0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="258"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    #while True:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="259"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    for i in range(0, total_len):</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="260"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        image_name = image_list[i]</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="261"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        src_image = cv2.imread(image_name)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="262"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        cv2.imshow('</span>src_image<span class="hljs-string"><span class="hljs-string">', src_image)</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="263"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        cv2.waitKey(1)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="264"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="265"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        prev_time = time.time()</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="266"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        image, detections = image_detection(</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="267"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">            image_name, network, class_names, class_colors, args.thresh)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="268"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        #'</span><span class="hljs-string">''</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="269"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">file</span>_name, <span class="hljs-keyword">type</span>_name <span class="hljs-operator">=</span> os.path.splitext(image_name)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="270"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #print(<span class="hljs-keyword">file</span>_name)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="271"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #print(<span class="hljs-keyword">file</span>_name.split(r<span class="hljs-string">'/'</span>))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="272"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        print(<span class="hljs-string">''</span>.join(<span class="hljs-keyword">file</span>_name.split(r<span class="hljs-string">'/'</span>)[-<span class="hljs-number">1</span>]) <span class="hljs-operator">+</span> <span class="hljs-string">'bbbbbbbbb'</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="273"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        cut_image_name_list <span class="hljs-operator">=</span> <span class="hljs-keyword">file</span>_name.split(r<span class="hljs-string">'/'</span>)[-<span class="hljs-number">1</span>:] #cut_image_name_list <span class="hljs-keyword">is</span> list</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="274"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        save_dir_image <span class="hljs-operator">=</span> os.path.join(save_dir ,cut_image_name_list[<span class="hljs-number">0</span>])</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="275"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(save_dir_image):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="276"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            os.makedirs(save_dir_image)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="277"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        cut_image_name <span class="hljs-operator">=</span> <span class="hljs-string">''</span>.join(cut_image_name_list) #list <span class="hljs-keyword">to</span> str</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="278"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">object</span>_<span class="hljs-keyword">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="279"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="280"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="281"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">for</span> label, confidence, bbox <span class="hljs-keyword">in</span> detections:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="282"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            cut_image_name_temp <span class="hljs-operator">=</span> cut_image_name <span class="hljs-operator">+</span> <span class="hljs-string">"_&#123;&#125;.jpg"</span>.<span class="hljs-keyword">format</span>(<span class="hljs-keyword">object</span>_<span class="hljs-keyword">count</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="283"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">object</span>_<span class="hljs-keyword">count</span> <span class="hljs-operator">+</span><span class="hljs-operator">=</span> <span class="hljs-number">1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="284"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            xmin, ymin, xmax, ymax <span class="hljs-operator">=</span> bbox<span class="hljs-number">2</span>points_zs(bbox)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="285"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            print(<span class="hljs-string">"aaaaaaaaa x,&#123;&#125; y,&#123;&#125; w,&#123;&#125; h&#123;&#125;"</span>.<span class="hljs-keyword">format</span>(xmin, ymin, xmax, ymax))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="286"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            xmin_coordinary <span class="hljs-operator">=</span> (int)(xmin <span class="hljs-operator">*</span> src_image.shape[<span class="hljs-number">1</span>] <span class="hljs-operator">/</span> src_width-<span class="hljs-number">0.5</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="287"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ymin_coordinary <span class="hljs-operator">=</span> (int)(ymin <span class="hljs-operator">*</span> src_image.shape[<span class="hljs-number">0</span>] <span class="hljs-operator">/</span> src_height-<span class="hljs-number">0.5</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="288"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            xmax_coordinary <span class="hljs-operator">=</span> (int)(xmax <span class="hljs-operator">*</span> src_image.shape[<span class="hljs-number">1</span>] <span class="hljs-operator">/</span> src_width<span class="hljs-operator">+</span><span class="hljs-number">0.5</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="289"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            ymax_coordinary <span class="hljs-operator">=</span> (int)(ymax <span class="hljs-operator">*</span> src_image.shape[<span class="hljs-number">0</span>] <span class="hljs-operator">/</span> src_height<span class="hljs-operator">+</span><span class="hljs-number">0.5</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="290"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> xmin_coordinary<span class="hljs-operator">&gt;</span>src_image.shape[<span class="hljs-number">1</span>]:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="291"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                xmin_coordinary <span class="hljs-operator">=</span> src_image.shape[<span class="hljs-number">1</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="292"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> ymin_coordinary<span class="hljs-operator">&gt;</span>src_image.shape[<span class="hljs-number">0</span>]:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="293"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                ymin_coordinary <span class="hljs-operator">=</span> src_image.shape[<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="294"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> xmax_coordinary<span class="hljs-operator">&gt;</span>src_image.shape[<span class="hljs-number">1</span>]:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="295"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                xmax_coordinary <span class="hljs-operator">=</span> src_image.shape[<span class="hljs-number">1</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="296"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> ymax_coordinary<span class="hljs-operator">&gt;</span>src_image.shape[<span class="hljs-number">0</span>]:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="297"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                ymax_coordinary <span class="hljs-operator">=</span> src_image.shape[<span class="hljs-number">0</span>]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="298"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="299"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> xmin_coordinary <span class="hljs-operator">&lt;</span> <span class="hljs-number">0</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="300"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                xmin_coordinary <span class="hljs-operator">=</span> <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="301"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> ymin_coordinary <span class="hljs-operator">&lt;</span> <span class="hljs-number">0</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="302"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                ymin_coordinary <span class="hljs-operator">=</span> <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="303"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> xmax_coordinary <span class="hljs-operator">&lt;</span> <span class="hljs-number">0</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="304"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                xmax_coordinary <span class="hljs-operator">=</span> <span class="hljs-number">0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="305"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> ymax_coordinary <span class="hljs-operator">&lt;</span> <span class="hljs-number">0</span>:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="306"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                ymax_coordinary <span class="hljs-operator">=</span> <span class="hljs-number">0</span> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="307"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="308"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            print(<span class="hljs-string">"qqqqqqqq   x,&#123;&#125; y,&#123;&#125; w,&#123;&#125; h&#123;&#125;"</span>.<span class="hljs-keyword">format</span>(xmin_coordinary, ymin_coordinary, xmax_coordinary, ymax_coordinary))</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="309"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            out_iou_img <span class="hljs-operator">=</span> np.full((ymax_coordinary<span class="hljs-operator"> - </span>ymin_coordinary, xmax_coordinary<span class="hljs-operator"> - </span>xmin_coordinary, src_image.shape[<span class="hljs-number">2</span>]), <span class="hljs-number">114</span>, dtype<span class="hljs-operator">=</span>np.uint<span class="hljs-number">8</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="310"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            out_iou_img[:,:] <span class="hljs-operator">=</span> src_image[ymin_coordinary:ymax_coordinary,xmin_coordinary:xmax_coordinary]</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="311"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            cv<span class="hljs-number">2</span>.imwrite(os.path.join(save_dir_image,cut_image_name_temp),out_iou_img)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="312"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        #<span class="hljs-string">''</span><span class="hljs-string"><span class="hljs-string">'</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="313"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        #if args.save_labels:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="314"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        #if True:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="315"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">            #save_annotations(image_name, image, detections, class_names)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="316"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        darknet.print_detections(detections, args.ext_output)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="317"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        fps = int(1/(time.time() - prev_time))</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="318"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        print("FPS: &#123;&#125;".format(fps))</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="319"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        if not args.dont_show:</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="320"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">            #cv2.imshow('</span>Inference<span class="hljs-string"><span class="hljs-string">', image)</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="321"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">            cv2.waitKey(1)</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="322"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">            #if cv2.waitKey() &amp; 0xFF == ord('</span>q<span class="hljs-string"><span class="hljs-string">'):</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="323"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">                #break</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="324"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">        index += 1</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="325"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="326"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">if __name__ == "__main__":</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="327"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    # unconmment next line for an example of batch processing</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="328"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    # batch_detection_example()</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="329"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string">    main()</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="330"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="331"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-string"></span></div></div></li></ol></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreWhite.png" alt title></span></div><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:21,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:21,&quot;runIdx&quot;:-1}}"></button></pre> <p>运行：</p> <pre data-index="22" class="set-code-show" name="code"><code class="hljs language-cobol">python<span class="hljs-number">3</span> detect.py</code><div class="hljs-button {2} add_def" data-title="复制" onclick="hljs.copyCode(event)"></div><button class="btn-code-notes ckeditor" data-report-view-hover="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:22,&quot;runIdx&quot;:-1}}" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;dest&quot;:&quot;https://trae.com.cn?utm_source=community&amp;utm_medium=csdn&amp;utm_campaign=daima&quot;,&quot;extra&quot;:{&quot;index&quot;:22,&quot;runIdx&quot;:-1}}"></button></pre> <p><strong>总结：以上就是我在这段时间的学习心得，主要目的是加深理解，也希望能帮到大家，如果有什么错误，也欢迎各位批评指正，共同进步！</strong></p>                </div><div data-report-view="{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;spm&quot;:&quot;1001.2101.3001.6548&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/perfectdisaster/article/details/125674868&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}"><div></div></div>        ]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Introduction</title>
      <link href="/2024/01/24/hello-world/"/>
      <url>/2024/01/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to my website .This is 郭昱鑫（YuXinGuo）,I’m an Undergraduate student of Northwestern Polytechnical University in 2021 and a PhD student of the class of 2025 at Beihang University. Check about page for more info. If you get any problems , you can contact me to communicate together by tecent(742008088)、wechat(w742008088),or you can ask me on <a href="https://gitee.com/gyxGYX123/">Gitee</a>.</p><hr><p>欢迎来到我的个人网站。我是郭昱鑫（YuXinGuo），2021届西北工业大学本科生，北京航空航天大学2025届博士生。查看about页面以获取更多信息。如果您有任何问题，可以通过QQ（742008088）,微信(w742008088)联系我共同沟通，也可以在[Gitee]上留言(<a href="https://gitee.com/gyxGYX123/">https://gitee.com/gyxGYX123/</a>).</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
